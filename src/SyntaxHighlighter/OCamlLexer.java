/* The following code was generated by JFlex 1.4.3 on 4/25/12 4:26 PM */

package camel.syntaxhighlighter;
 

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 4/25/12 4:26 PM from the specification file
 * <tt>ocaml.flex</tt>
 */
public final class OCamlLexer extends JFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int JDOC_TAG = 8;
  public static final int JDOC = 6;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\5\1\3\1\2\1\0\1\3\1\1\16\5\4\0\1\3\1\76"+
    "\1\24\1\0\1\4\1\0\1\67\1\25\1\57\1\60\1\65\1\23"+
    "\1\0\1\23\1\21\1\66\1\6\1\17\1\62\1\61\1\64\1\15"+
    "\1\63\1\15\2\7\1\100\1\0\1\73\1\74\1\75\1\0\1\77"+
    "\1\13\1\16\1\103\1\20\1\22\1\20\5\4\1\11\2\4\1\14"+
    "\3\4\1\101\4\4\1\12\2\4\1\104\1\26\1\105\1\77\1\10"+
    "\1\0\1\27\1\36\1\41\1\31\1\33\1\47\1\37\1\51\1\40"+
    "\1\55\1\102\1\42\1\54\1\30\1\43\1\46\1\71\1\34\1\32"+
    "\1\35\1\50\1\56\1\44\1\45\1\53\1\52\1\0\1\70\1\0"+
    "\1\72\41\5\2\0\4\4\4\0\1\4\2\0\1\5\7\0\1\4"+
    "\4\0\1\4\5\0\27\4\1\0\37\4\1\0\u013f\4\31\0\162\4"+
    "\4\0\14\4\16\0\5\4\11\0\1\4\21\0\130\5\5\0\23\5"+
    "\12\0\1\4\13\0\1\4\1\0\3\4\1\0\1\4\1\0\24\4"+
    "\1\0\54\4\1\0\46\4\1\0\5\4\4\0\202\4\1\0\4\5"+
    "\3\0\105\4\1\0\46\4\2\0\2\4\6\0\20\4\41\0\46\4"+
    "\2\0\1\4\7\0\47\4\11\0\21\5\1\0\27\5\1\0\3\5"+
    "\1\0\1\5\1\0\2\5\1\0\1\5\13\0\33\4\5\0\3\4"+
    "\15\0\4\5\14\0\6\5\13\0\32\4\5\0\13\4\16\5\7\0"+
    "\12\5\4\0\2\4\1\5\143\4\1\0\1\4\10\5\1\0\6\5"+
    "\2\4\2\5\1\0\4\5\2\4\12\5\3\4\2\0\1\4\17\0"+
    "\1\5\1\4\1\5\36\4\33\5\2\0\3\4\60\0\46\4\13\5"+
    "\1\4\u014f\0\3\5\66\4\2\0\1\5\1\4\20\5\2\0\1\4"+
    "\4\5\3\0\12\4\2\5\2\0\12\5\21\0\3\5\1\0\10\4"+
    "\2\0\2\4\2\0\26\4\1\0\7\4\1\0\1\4\3\0\4\4"+
    "\2\0\1\5\1\4\7\5\2\0\2\5\2\0\3\5\11\0\1\5"+
    "\4\0\2\4\1\0\3\4\2\5\2\0\12\5\4\4\15\0\3\5"+
    "\1\0\6\4\4\0\2\4\2\0\26\4\1\0\7\4\1\0\2\4"+
    "\1\0\2\4\1\0\2\4\2\0\1\5\1\0\5\5\4\0\2\5"+
    "\2\0\3\5\13\0\4\4\1\0\1\4\7\0\14\5\3\4\14\0"+
    "\3\5\1\0\11\4\1\0\3\4\1\0\26\4\1\0\7\4\1\0"+
    "\2\4\1\0\5\4\2\0\1\5\1\4\10\5\1\0\3\5\1\0"+
    "\3\5\2\0\1\4\17\0\2\4\2\5\2\0\12\5\1\0\1\4"+
    "\17\0\3\5\1\0\10\4\2\0\2\4\2\0\26\4\1\0\7\4"+
    "\1\0\2\4\1\0\5\4\2\0\1\5\1\4\6\5\3\0\2\5"+
    "\2\0\3\5\10\0\2\5\4\0\2\4\1\0\3\4\4\0\12\5"+
    "\1\0\1\4\20\0\1\5\1\4\1\0\6\4\3\0\3\4\1\0"+
    "\4\4\3\0\2\4\1\0\1\4\1\0\2\4\3\0\2\4\3\0"+
    "\3\4\3\0\10\4\1\0\3\4\4\0\5\5\3\0\3\5\1\0"+
    "\4\5\11\0\1\5\17\0\11\5\11\0\1\4\7\0\3\5\1\0"+
    "\10\4\1\0\3\4\1\0\27\4\1\0\12\4\1\0\5\4\4\0"+
    "\7\5\1\0\3\5\1\0\4\5\7\0\2\5\11\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0"+
    "\12\4\1\0\5\4\2\0\1\5\1\4\7\5\1\0\3\5\1\0"+
    "\4\5\7\0\2\5\7\0\1\4\1\0\2\4\4\0\12\5\22\0"+
    "\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0\20\4\4\0"+
    "\6\5\2\0\3\5\1\0\4\5\11\0\1\5\10\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\22\4\3\0\30\4\1\0\11\4\1\0"+
    "\1\4\2\0\7\4\3\0\1\5\4\0\6\5\1\0\1\5\1\0"+
    "\10\5\22\0\2\5\15\0\60\4\1\5\2\4\7\5\4\0\10\4"+
    "\10\5\1\0\12\5\47\0\2\4\1\0\1\4\2\0\2\4\1\0"+
    "\1\4\2\0\1\4\6\0\4\4\1\0\7\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\4\2\0\2\4\1\0\4\4\1\5\2\4\6\5"+
    "\1\0\2\5\1\4\2\0\5\4\1\0\1\4\1\0\6\5\2\0"+
    "\12\5\2\0\2\4\42\0\1\4\27\0\2\5\6\0\12\5\13\0"+
    "\1\5\1\0\1\5\1\0\1\5\4\0\2\5\10\4\1\0\42\4"+
    "\6\0\24\5\1\0\2\5\4\4\4\0\10\5\1\0\44\5\11\0"+
    "\1\5\71\0\42\4\1\0\5\4\1\0\2\4\1\0\7\5\3\0"+
    "\4\5\6\0\12\5\6\0\6\4\4\5\106\0\46\4\12\0\51\4"+
    "\7\0\132\4\5\0\104\4\5\0\122\4\6\0\7\4\1\0\77\4"+
    "\1\0\1\4\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4"+
    "\2\0\47\4\1\0\1\4\1\0\4\4\2\0\37\4\1\0\1\4"+
    "\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4\2\0\7\4"+
    "\1\0\7\4\1\0\27\4\1\0\37\4\1\0\1\4\1\0\4\4"+
    "\2\0\7\4\1\0\47\4\1\0\23\4\16\0\11\5\56\0\125\4"+
    "\14\0\u026c\4\2\0\10\4\12\0\32\4\5\0\113\4\3\0\3\4"+
    "\17\0\15\4\1\0\4\4\3\5\13\0\22\4\3\5\13\0\22\4"+
    "\2\5\14\0\15\4\1\0\3\4\1\0\2\5\14\0\64\4\40\5"+
    "\3\0\1\4\3\0\2\4\1\5\2\0\12\5\41\0\3\5\2\0"+
    "\12\5\6\0\130\4\10\0\51\4\1\5\126\0\35\4\3\0\14\5"+
    "\4\0\14\5\12\0\12\5\36\4\2\0\5\4\u038b\0\154\4\224\0"+
    "\234\4\4\0\132\4\6\0\26\4\2\0\6\4\2\0\46\4\2\0"+
    "\6\4\2\0\10\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\37\4\2\0\65\4\1\0\7\4\1\0\1\4\3\0\3\4\1\0"+
    "\7\4\3\0\4\4\2\0\6\4\4\0\15\4\5\0\3\4\1\0"+
    "\7\4\17\0\4\5\32\0\5\5\20\0\2\4\23\0\1\4\13\0"+
    "\4\5\6\0\6\5\1\0\1\4\15\0\1\4\40\0\22\4\36\0"+
    "\15\5\4\0\1\5\3\0\6\5\27\0\1\4\4\0\1\4\2\0"+
    "\12\4\1\0\1\4\3\0\5\4\6\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\4\4\1\0\3\4\1\0\7\4\3\0\3\4\5\0"+
    "\5\4\26\0\44\4\u0e81\0\3\4\31\0\11\4\6\5\1\0\5\4"+
    "\2\0\5\4\4\0\126\4\2\0\2\5\2\0\3\4\1\0\137\4"+
    "\5\0\50\4\4\0\136\4\21\0\30\4\70\0\20\4\u0200\0\u19b6\4"+
    "\112\0\u51a6\4\132\0\u048d\4\u0773\0\u2ba4\4\u215c\0\u012e\4\2\0\73\4"+
    "\225\0\7\4\14\0\5\4\5\0\1\4\1\5\12\4\1\0\15\4"+
    "\1\0\5\4\1\0\1\4\1\0\2\4\1\0\2\4\1\0\154\4"+
    "\41\0\u016b\4\22\0\100\4\2\0\66\4\50\0\15\4\3\0\20\5"+
    "\20\0\4\5\17\0\2\4\30\0\3\4\31\0\1\4\6\0\5\4"+
    "\1\0\207\4\2\0\1\5\4\0\1\4\13\0\12\5\7\0\32\4"+
    "\4\0\1\4\1\0\32\4\12\0\132\4\3\0\6\4\2\0\6\4"+
    "\2\0\6\4\2\0\3\4\3\0\2\4\3\0\2\4\22\0\3\5"+
    "\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\3\1\1\2\3\3\1\2\1\1\1\4\1\5"+
    "\1\6\22\2\1\1\1\4\3\1\3\4\1\1\2\2"+
    "\1\1\1\7\2\10\1\11\1\1\1\7\1\1\2\3"+
    "\3\0\1\3\1\0\1\3\3\2\1\12\10\2\1\12"+
    "\13\2\1\12\4\2\1\12\37\2\1\13\2\2\1\14"+
    "\1\15\2\7\5\3\1\0\1\3\2\2\1\4\3\2"+
    "\1\4\1\2\1\14\7\2\1\4\1\13\2\2\1\4"+
    "\10\2\1\13\15\2\1\4\11\2\1\12\1\2\1\4"+
    "\1\2\1\4\4\2\1\7\3\3\3\2\1\4\20\2"+
    "\1\13\14\2\1\13\1\12\17\2\3\3\1\0\23\2"+
    "\1\12\13\2\1\0\3\3\5\0\3\2\1\13\21\2"+
    "\3\0\3\3\3\0\23\2\4\0\3\3\1\0\14\2"+
    "\12\0\3\3\5\2\11\0\3\3\2\2\10\0\2\3"+
    "\2\2\6\0\2\3\1\2\4\0\2\3\3\0\2\3"+
    "\3\0\2\3\2\0\2\3\1\0\2\3\2\0\1\3"+
    "\1\0\1\3\1\0\1\3\1\0\1\3\1\0\36\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\106\0\214\0\322\0\u0118\0\u015e\0\u01a4\0\u01ea"+
    "\0\u0230\0\u0276\0\u02bc\0\u0302\0\u0348\0\u038e\0\u0118\0\u0118"+
    "\0\u03d4\0\u041a\0\u0460\0\u04a6\0\u04ec\0\u0532\0\u0578\0\u05be"+
    "\0\u0604\0\u064a\0\u0690\0\u06d6\0\u071c\0\u0762\0\u07a8\0\u07ee"+
    "\0\u0834\0\u087a\0\u08c0\0\u0906\0\u094c\0\u0992\0\u09d8\0\u0a1e"+
    "\0\u0a64\0\u0118\0\u0aaa\0\u0af0\0\u0b36\0\u0b7c\0\u0bc2\0\u0c08"+
    "\0\u0118\0\u0118\0\u0c4e\0\u0c94\0\u0cda\0\u0d20\0\u0118\0\u0d66"+
    "\0\u0dac\0\u0df2\0\u0e38\0\u0e7e\0\u01ea\0\u0ec4\0\u0f0a\0\u0f50"+
    "\0\u0f96\0\u0fdc\0\u1022\0\u1068\0\u10ae\0\u10f4\0\u113a\0\u1180"+
    "\0\u11c6\0\u120c\0\u1252\0\u1298\0\u12de\0\u1324\0\u136a\0\u13b0"+
    "\0\u13f6\0\u143c\0\u1482\0\u14c8\0\u150e\0\u01ea\0\u1554\0\u159a"+
    "\0\u15e0\0\u1626\0\u166c\0\u16b2\0\u16f8\0\u173e\0\u1784\0\u17ca"+
    "\0\u1810\0\u1856\0\u189c\0\u18e2\0\u1928\0\u196e\0\u19b4\0\u19fa"+
    "\0\u1a40\0\u1a86\0\u1acc\0\u1b12\0\u1b58\0\u1b9e\0\u1be4\0\u1c2a"+
    "\0\u1c70\0\u1cb6\0\u1cfc\0\u1d42\0\u1d88\0\u1dce\0\u1e14\0\u1e5a"+
    "\0\u1ea0\0\u1ee6\0\u0118\0\u1f2c\0\u1f72\0\u0118\0\u0118\0\u1fb8"+
    "\0\u1ffe\0\u2044\0\u208a\0\u20d0\0\u2116\0\u215c\0\u21a2\0\u21e8"+
    "\0\u222e\0\u2274\0\u01ea\0\u22ba\0\u2300\0\u2346\0\u238c\0\u23d2"+
    "\0\u01ea\0\u2418\0\u245e\0\u24a4\0\u24ea\0\u2530\0\u2576\0\u25bc"+
    "\0\u2602\0\u01ea\0\u2648\0\u268e\0\u26d4\0\u271a\0\u2760\0\u27a6"+
    "\0\u27ec\0\u2832\0\u2878\0\u28be\0\u2904\0\u294a\0\u2990\0\u29d6"+
    "\0\u2a1c\0\u2a62\0\u2aa8\0\u2aee\0\u2b34\0\u2b7a\0\u2bc0\0\u2c06"+
    "\0\u2c4c\0\u2c92\0\u2cd8\0\u2d1e\0\u2d64\0\u2daa\0\u2df0\0\u2e36"+
    "\0\u2e7c\0\u2ec2\0\u2f08\0\u2f4e\0\u2f94\0\u2fda\0\u3020\0\u3066"+
    "\0\u30ac\0\u30f2\0\u3138\0\u317e\0\u31c4\0\u320a\0\u0118\0\u3250"+
    "\0\u3296\0\u32dc\0\u3322\0\u3368\0\u33ae\0\u33f4\0\u343a\0\u3480"+
    "\0\u34c6\0\u350c\0\u3552\0\u3598\0\u35de\0\u3624\0\u366a\0\u36b0"+
    "\0\u36f6\0\u373c\0\u3782\0\u37c8\0\u380e\0\u3854\0\u389a\0\u38e0"+
    "\0\u3926\0\u396c\0\u39b2\0\u39f8\0\u3a3e\0\u3a84\0\u3aca\0\u3b10"+
    "\0\u3b56\0\u3b9c\0\u3be2\0\u3c28\0\u3c6e\0\u3cb4\0\u3cfa\0\u3d40"+
    "\0\u3d86\0\u3dcc\0\u3e12\0\u3e58\0\u3e9e\0\u3ee4\0\u3f2a\0\u3f70"+
    "\0\u3fb6\0\u3ffc\0\u4042\0\u4088\0\u40ce\0\u4114\0\u415a\0\u41a0"+
    "\0\u41e6\0\u422c\0\u4272\0\u42b8\0\u42fe\0\u4344\0\u438a\0\u43d0"+
    "\0\u4416\0\u445c\0\u44a2\0\u44e8\0\u452e\0\u4574\0\u45ba\0\u4600"+
    "\0\u4646\0\u468c\0\u46d2\0\u4718\0\u475e\0\u47a4\0\u47ea\0\u4830"+
    "\0\u4876\0\u48bc\0\u4902\0\u4948\0\u498e\0\u49d4\0\u4a1a\0\u4a60"+
    "\0\u4aa6\0\u4aec\0\u4b32\0\u4b78\0\u4bbe\0\u4c04\0\u4c4a\0\u4c90"+
    "\0\u4cd6\0\u4d1c\0\u4d62\0\u4da8\0\u4dee\0\u4e34\0\u4e7a\0\u4ec0"+
    "\0\u4f06\0\u4f4c\0\u4f92\0\u4fd8\0\u501e\0\u5064\0\u50aa\0\u50f0"+
    "\0\u5136\0\u517c\0\u51c2\0\u5208\0\u524e\0\u5294\0\u52da\0\u5320"+
    "\0\u5366\0\u53ac\0\u53f2\0\u5438\0\u547e\0\u54c4\0\u550a\0\u5550"+
    "\0\u5596\0\u55dc\0\u5622\0\u5668\0\u56ae\0\u56f4\0\u573a\0\u5780"+
    "\0\u57c6\0\u580c\0\u5852\0\u5898\0\u58de\0\u5924\0\u596a\0\u2602"+
    "\0\u59b0\0\u59f6\0\u5a3c\0\u5a82\0\u5ac8\0\u5b0e\0\u5b54\0\u5b9a"+
    "\0\u5be0\0\u5c26\0\u5c6c\0\u5cb2\0\u5cf8\0\u5d3e\0\u238c\0\u5d84"+
    "\0\u5dca\0\u5e10\0\u5e56\0\u5e9c\0\u5ee2\0\u5f28\0\u5f6e\0\u5fb4"+
    "\0\u5ffa\0\u6040\0\u6086\0\u60cc\0\u6112\0\u6158\0\u619e\0\u61e4"+
    "\0\u622a\0\u6270\0\u62b6\0\u62fc\0\u6342\0\u6388\0\u63ce\0\u6414"+
    "\0\u645a\0\u64a0\0\u64e6\0\u652c\0\u6572\0\u65b8\0\u65fe\0\u6644"+
    "\0\u668a\0\u66d0\0\u6716\0\u675c\0\u67a2\0\u67e8\0\u682e\0\u6874"+
    "\0\u68ba\0\u6900\0\u6946\0\u698c\0\u69d2\0\u6a18\0\u6a5e\0\u6aa4"+
    "\0\u6aea\0\u6b30\0\u6b76\0\u6bbc\0\u6c02\0\u6c48\0\u6c8e\0\u6cd4"+
    "\0\u6d1a\0\u6d60\0\u6da6\0\u6dec\0\u6e32\0\u6e78\0\u6ebe\0\u6f04"+
    "\0\u6f4a\0\u6f90\0\u6fd6\0\u701c\0\u7062\0\u70a8\0\u70ee\0\u7134"+
    "\0\u717a\0\u71c0\0\u7206\0\u724c\0\u7292\0\u72d8\0\u731e\0\u7364"+
    "\0\u73aa\0\u73f0\0\u7436\0\u747c\0\u74c2\0\u7508\0\u754e\0\u7594"+
    "\0\u75da\0\u7620\0\u7666\0\u76ac\0\u76f2\0\u7738\0\u777e\0\u77c4"+
    "\0\u780a\0\u7850\0\u7896\0\u78dc\0\u7922\0\u7968\0\u79ae\0\u79f4"+
    "\0\u7a3a\0\u7a80\0\u7ac6\0\u7b0c\0\u7b52\0\u7b98\0\u7bde\0\u7c24"+
    "\0\u7c6a\0\u7cb0\0\u7cf6\0\u7d3c\0\u7d82\0\u7dc8\0\u7e0e\0\u7e54"+
    "\0\u7e9a";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\5\1\7\1\10\1\5\1\11\1\12"+
    "\1\13\1\14\3\10\1\12\1\10\1\12\1\10\1\15"+
    "\1\10\1\16\1\17\1\20\1\5\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\10\1\31\1\32"+
    "\1\33\1\34\1\35\1\10\1\36\1\37\1\40\3\10"+
    "\1\41\1\10\1\42\1\43\1\5\4\12\1\44\1\16"+
    "\1\45\1\46\1\10\1\47\1\50\3\51\1\52\1\53"+
    "\1\54\1\10\1\55\1\56\1\5\1\57\1\60\1\61"+
    "\21\57\1\62\1\57\1\63\57\57\1\64\1\60\1\61"+
    "\22\64\1\62\1\65\57\64\106\5\110\0\1\5\106\0"+
    "\1\7\106\0\15\10\1\0\1\10\4\0\30\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\10\0\3\66\1\67"+
    "\1\70\1\0\1\71\1\66\1\72\1\66\1\67\1\73"+
    "\1\74\6\0\1\67\1\0\1\74\2\0\1\72\3\0"+
    "\1\67\1\71\1\0\1\70\1\0\1\67\11\0\4\66"+
    "\27\0\3\12\1\67\3\0\1\12\1\0\1\12\1\67"+
    "\1\73\1\74\6\0\1\67\1\0\1\74\6\0\1\67"+
    "\4\0\1\67\11\0\4\12\25\0\2\10\3\13\4\10"+
    "\1\13\1\10\1\13\1\75\1\73\1\76\4\0\2\10"+
    "\1\75\1\10\1\76\13\10\1\75\7\10\2\0\4\13"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\77\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\10\0\3\73\4\0\1\73\1\0\1\73"+
    "\41\0\4\73\42\0\1\52\70\0\15\10\1\0\1\10"+
    "\4\0\1\10\1\100\1\10\1\101\1\10\1\102\1\103"+
    "\1\104\2\10\1\105\15\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\106"+
    "\3\10\1\107\7\10\1\110\13\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\4\10\1\111\7\10\1\112\13\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\10\1\113\4\10\1\114\2\10\1\115\16\10\2\0"+
    "\4\10\4\0\1\116\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\100\11\10\1\117\2\10\1\120"+
    "\1\121\10\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\122\3\10\1\123"+
    "\23\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\124\4\10\1\125\6\10"+
    "\1\126\5\10\1\127\1\10\1\130\3\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\4\10\1\131\7\10\1\132\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\1\10\1\133\6\10\1\134\7\10\1\126\7\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\135\6\10\1\136\1\137"+
    "\5\10\1\140\5\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\141\1\142"+
    "\1\143\1\144\1\145\4\10\1\146\2\10\1\147\1\10"+
    "\1\150\11\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\5\10\1\126\1\10"+
    "\1\151\7\10\1\152\1\126\1\153\6\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\154\10\10\1\155\5\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\156\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\157"+
    "\2\10\1\110\1\10\1\143\5\10\1\160\1\161\4\10"+
    "\1\162\6\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\10\1\163\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\164\3\10\1\165\4\10\1\166"+
    "\2\10\1\167\4\10\1\170\6\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\171\10\10\1\172\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\62\0\1\173\46\0\1\52\43\0\1\52"+
    "\107\0\1\52\106\0\1\52\40\0\1\16\156\0\2\52"+
    "\104\0\1\52\105\0\1\52\3\0\1\52\11\0\15\10"+
    "\1\0\1\10\4\0\6\10\1\174\21\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\22\10\1\175\5\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\107\0\1\176\1\57\2\0\21\57\1\0"+
    "\1\57\1\0\57\57\2\0\1\61\103\0\2\177\1\0"+
    "\3\177\1\200\1\177\1\201\4\177\1\201\1\177\1\200"+
    "\41\177\2\200\2\201\21\177\1\64\2\0\22\64\2\0"+
    "\57\64\2\177\1\0\103\177\6\0\3\66\4\0\1\66"+
    "\1\0\1\66\1\67\1\73\1\74\6\0\1\67\1\0"+
    "\1\74\13\0\1\67\11\0\4\66\27\0\1\202\2\203"+
    "\2\0\1\203\1\0\4\203\1\0\1\203\4\0\1\203"+
    "\1\0\1\203\1\0\1\203\2\0\1\203\2\0\1\203"+
    "\5\0\1\203\11\0\4\203\16\0\1\203\10\0\1\204"+
    "\1\0\1\204\4\0\1\204\1\0\1\204\41\0\4\204"+
    "\27\0\1\205\1\0\1\205\6\0\1\205\74\0\3\73"+
    "\4\0\1\73\1\0\1\73\1\67\1\0\1\74\6\0"+
    "\1\67\1\0\1\74\13\0\1\67\11\0\4\73\27\0"+
    "\3\206\4\0\1\206\1\0\1\206\3\0\1\207\35\0"+
    "\4\206\25\0\2\10\3\210\4\10\1\210\1\10\1\210"+
    "\1\10\1\0\1\10\1\207\3\0\30\10\2\0\4\210"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\3\10\1\211\24\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\2\10"+
    "\1\126\25\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\3\10\1\212\1\10"+
    "\1\213\3\10\1\214\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\5\10"+
    "\1\215\22\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\216\27\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\3\10\1\217\24\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\14\10\1\220\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\221"+
    "\4\10\1\222\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\10\10\1\223"+
    "\4\10\1\126\12\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\6\10\1\213"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\12\10\1\224\15\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\225\13\10\1\226\12\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\2\10\1\213\25\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\2\10\1\227\2\10\1\230\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\10\1\231\6\10\1\126\17\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\5\10\1\110\22\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\3\10\1\225"+
    "\24\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\10\1\232\4\10\1\233"+
    "\2\10\1\110\1\234\4\10\1\235\10\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\3\10\1\236\24\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\11\10"+
    "\1\237\16\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\240\11\10\1\126"+
    "\5\10\1\213\7\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\231"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\21\10\1\241\2\10\1\126"+
    "\3\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\4\10\1\242\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\17\10\1\225\10\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\10\10\1\243\17\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\14\10\1\244"+
    "\13\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\4\10\1\245\10\10\1\0\1\10\4\0\6\10\1\246"+
    "\2\10\1\247\1\250\5\10\1\251\1\10\1\252\5\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\10\1\253\26\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\254\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\255"+
    "\27\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\10\1\256\1\10\1\231"+
    "\21\10\1\257\2\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\260\27\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\10\1\113\21\10\1\261\4\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\14\10\1\110\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\4\10\1\262\23\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\5\10"+
    "\1\213\5\10\1\213\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\126\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\3\10\1\263\24\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\5\10\1\213\2\10\1\264\17\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\14\10\1\224\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\26\10\1\265\1\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\4\10"+
    "\1\242\1\10\1\266\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\267\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\6\10\1\270\21\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\242\4\10\1\271\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\272\4\10\1\273\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\274\1\10\1\117\14\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\14\10\1\275\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\126\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\10"+
    "\1\276\26\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\11\10\1\263\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\6\10\1\277\7\10\1\300\11\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\6\10\1\301\21\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\1\10\1\300\26\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\2\10"+
    "\1\302\25\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\6\10\1\303\21\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\13\10\1\126\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\304\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\5\10"+
    "\1\305\22\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\306\27\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\10\0\1\201\1\0"+
    "\1\201\4\0\1\201\1\0\1\201\41\0\4\201\27\0"+
    "\1\307\1\0\1\307\4\0\1\307\1\0\1\307\41\0"+
    "\4\307\27\0\1\202\2\203\1\67\1\0\1\203\1\0"+
    "\4\203\1\0\1\203\4\0\1\203\1\0\1\203\1\0"+
    "\1\203\2\0\1\203\2\0\1\203\1\67\4\0\1\203"+
    "\11\0\4\203\16\0\1\203\10\0\3\310\1\67\1\0"+
    "\1\310\1\0\4\310\1\0\1\310\4\0\1\310\1\0"+
    "\1\310\1\0\1\310\2\0\1\310\2\0\1\310\1\67"+
    "\4\0\1\310\11\0\4\310\16\0\1\310\10\0\1\311"+
    "\1\0\1\311\1\67\3\0\1\311\1\0\1\311\22\0"+
    "\1\67\16\0\4\311\27\0\1\312\1\0\1\312\6\0"+
    "\1\312\74\0\3\206\4\0\1\206\1\0\1\206\1\67"+
    "\10\0\1\67\15\0\1\67\11\0\4\206\27\0\3\206"+
    "\4\0\1\206\1\0\1\206\41\0\4\206\25\0\2\10"+
    "\3\210\4\10\1\210\1\10\1\210\1\75\1\0\1\10"+
    "\4\0\2\10\1\75\15\10\1\75\7\10\2\0\4\210"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\6\10\1\313\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\4\10"+
    "\1\314\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\10\1\213\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\315\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\10\1\316\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\4\10\1\317\10\10\1\0\1\10\4\0"+
    "\30\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\3\10\1\213\24\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\320\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\4\10\1\321\10\10\1\0"+
    "\1\10\4\0\30\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\5\10\1\213"+
    "\22\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\4\10\1\126\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\322\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\4\10\1\323\4\10\1\324\2\10\1\325\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\326\7\10\1\327\6\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\22\10\1\213\5\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\4\10\1\330\23\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\4\10\1\331"+
    "\23\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\25\10\1\332\2\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\333\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\3\10\1\334\24\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\2\10\1\335"+
    "\25\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\10\1\336\2\10\1\126"+
    "\23\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\10\1\126\26\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\242\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\13\10\1\337\14\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\12\10\1\340"+
    "\15\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\4\10\1\341\10\10\1\0\1\10\4\0\30\10\2\0"+
    "\1\342\1\10\1\343\1\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\6\10\1\344\21\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\5\10\1\213\5\10\1\345\14\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\346\16\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\4\10\1\347\23\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\14\10"+
    "\1\350\13\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\13\10\1\213\14\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\3\10\1\351\24\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\3\10\1\352\24\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\17\10"+
    "\1\353\10\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\5\10\1\354\22\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\24\10\1\355\3\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\16\10\1\356\11\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\232\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\13\10\1\357\1\10\1\0\1\10\4\0\30\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\327\23\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\360\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\4\10\1\245\10\10\1\0\1\10"+
    "\4\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\22\10\1\126\5\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\13\10\1\225\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\361\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\10"+
    "\1\362\25\10\1\363\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\13\10\1\364"+
    "\14\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\365\13\10\1\224\13\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\12\10\1\366\15\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\12\10\1\270\15\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\4\10\1\367\10\10\1\0\1\10"+
    "\4\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\22\10\1\370\5\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\4\10"+
    "\1\317\10\10\1\0\1\10\4\0\20\10\1\213\1\271"+
    "\6\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\371\27\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\6\10\1\372\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\11\10"+
    "\1\373\16\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\5\10\1\374\22\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\10\0\3\375"+
    "\1\67\1\0\1\375\1\0\4\375\1\0\1\375\4\0"+
    "\1\375\1\0\1\375\1\0\1\375\2\0\1\375\2\0"+
    "\1\375\1\67\4\0\1\375\11\0\4\375\16\0\1\375"+
    "\10\0\1\376\1\0\1\376\1\67\3\0\1\376\1\0"+
    "\1\376\22\0\1\67\16\0\4\376\27\0\1\377\1\0"+
    "\1\377\6\0\1\377\72\0\15\10\1\u0100\1\10\4\0"+
    "\30\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\5\10\1\145\22\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\24\10\1\232\3\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\30\10\2\0\1\10\1\213\2\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\20\10\1\u0101"+
    "\7\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\27\10\1\u0102\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\u0103\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\u0104\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\5\10\1\u0105\22\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\10\1\221\26\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\21\10\1\u0106\6\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\10"+
    "\1\u0107\26\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\12\10\1\145\15\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\5\10\1\u0108\22\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\17\10\1\u0109\10\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\13\10\1\213\1\10\1\0\1\10"+
    "\4\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\13\10\1\u010a\14\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\213\23\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\4\10\1\u010b\10\10"+
    "\1\0\1\10\4\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\12\10"+
    "\1\u010c\15\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\4\10\1\u010d\10\10\1\0\1\10\4\0\30\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\22\10\1\u010e\5\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\14\10\1\u010f\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\30\10"+
    "\2\0\1\10\1\232\2\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\30\10\2\0\3\10"+
    "\1\232\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\u0110\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\21\10\1\u0111\6\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\u0112"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\5\10\1\u0113\22\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\5\10\1\334\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\3\10\1\u0114\24\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\6\10\1\u0115"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\350\27\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\4\10\1\u0116\10\10"+
    "\1\0\1\10\4\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\4\10\1\263\10\10\1\0\1\10"+
    "\4\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\17\10\1\213\10\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\2\10"+
    "\1\213\12\10\1\0\1\10\4\0\17\10\1\213\10\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\14\10\1\u0117\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\u0118\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\u0118\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\u0119\27\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\15\10\1\u011a\12\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\6\10\1\337\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\6\10\1\u011b"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\11\10\1\u011c\6\10\1\u011d"+
    "\7\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\14\10\1\100\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\7\10\1\271\20\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\21\10\1\u011e\6\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\u011f"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\u0120\1\10\4\0\30\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\10\0\3\u0121\1\67\1\0\1\u0121"+
    "\1\0\4\u0121\1\0\1\u0121\4\0\1\u0121\1\0\1\u0121"+
    "\1\0\1\u0121\2\0\1\u0121\2\0\1\u0121\1\67\4\0"+
    "\1\u0121\11\0\4\u0121\16\0\1\u0121\10\0\1\u0122\1\0"+
    "\1\u0122\1\67\3\0\1\u0122\1\0\1\u0122\22\0\1\67"+
    "\16\0\4\u0122\27\0\1\u0123\1\0\1\u0123\6\0\1\u0123"+
    "\116\0\1\u0124\3\0\1\u0125\1\u0126\4\0\1\u0127\6\0"+
    "\1\u0128\40\0\15\10\1\0\1\10\4\0\13\10\1\u0129"+
    "\14\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\4\10\1\u012a\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\u012b\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\14\10\1\126\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\5\10\1\221"+
    "\22\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\6\10\1\221\21\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\10\10\1\u012c\17\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\10\1\u011e\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\6\10\1\u012d"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\14\10\1\u012e\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\11\10\1\u011c\1\10\1\u012f\4\10\1\u0101"+
    "\7\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\1\u0130\27\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\14\10\1\u0131\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\u0132"+
    "\27\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\20\10\1\u0133\7\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\u0134\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\2\10"+
    "\1\225\25\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\11\10\1\u0135\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\145\16\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\11\10\1\u0136\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\5\10"+
    "\1\u0137\22\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\14\10\1\u0138\13\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\10\1\232\26\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\4\10\1\u0139\10\10"+
    "\1\0\1\10\4\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\225\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\11\10\1\u013a\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\u013b\2\10\1\161\13\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\10\1\110\26\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\13\10\1\u013c\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\171"+
    "\27\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\10\10\1\u013d\17\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\35\0\1\u013e\6\0"+
    "\1\u013f\5\0\1\u0140\43\0\3\u0141\1\67\1\0\1\u0141"+
    "\1\0\4\u0141\1\0\1\u0141\4\0\1\u0141\1\0\1\u0141"+
    "\1\0\1\u0141\2\0\1\u0141\2\0\1\u0141\1\67\4\0"+
    "\1\u0141\11\0\4\u0141\16\0\1\u0141\10\0\1\u0142\1\0"+
    "\1\u0142\1\67\3\0\1\u0142\1\0\1\u0142\22\0\1\67"+
    "\16\0\4\u0142\27\0\1\u0143\1\0\1\u0143\6\0\1\u0143"+
    "\123\0\1\u0144\103\0\1\u0145\114\0\1\52\76\0\1\u0146"+
    "\103\0\1\52\60\0\15\10\1\0\1\10\4\0\14\10"+
    "\1\u0147\13\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\11\10\1\u0148\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\20\10\1\251\7\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\4\10\1\u0149\10\10"+
    "\1\0\1\10\4\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\11\10"+
    "\1\u013b\16\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\10\1\u014a\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\u014b\16\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\6\10\1\334\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\20\10"+
    "\1\u014c\7\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\10\1\u014d\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\4\10"+
    "\1\u014e\10\10\1\0\1\10\4\0\30\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\13\10\1\u014f\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\6\10"+
    "\1\u0150\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\20\10\1\u0151\7\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\1\u0152\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\20\10\1\u0153\7\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\u0154"+
    "\1\10\1\u0155\1\u0156\4\10\1\u011c\1\u0157\5\10\1\u0101"+
    "\7\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\6\10\1\u0158\21\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\14\10\1\242\13\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\14\10\1\u0159\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\u015a\1\10\4\0\30\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\34\0\1\u015b\116\0"+
    "\1\u015c\110\0\1\u015d\45\0\3\u015e\1\67\1\0\1\u015e"+
    "\1\0\4\u015e\1\0\1\u015e\4\0\1\u015e\1\0\1\u015e"+
    "\1\0\1\u015e\2\0\1\u015e\2\0\1\u015e\1\67\4\0"+
    "\1\u015e\11\0\4\u015e\16\0\1\u015e\10\0\1\u015f\1\0"+
    "\1\u015f\1\67\3\0\1\u015f\1\0\1\u015f\22\0\1\67"+
    "\16\0\4\u015f\27\0\1\u0160\1\0\1\u0160\6\0\1\u0160"+
    "\137\0\1\52\112\0\1\52\57\0\1\u0161\61\0\15\10"+
    "\1\0\1\10\4\0\1\110\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\1\10\1\263\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\14\10\1\u0162"+
    "\13\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\4\10\1\u0163\10\10\1\0\1\10\4\0\30\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\334\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\4\10\1\u0164\10\10\1\0"+
    "\1\10\4\0\30\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\u0165"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\3\10\1\u0155\6\10\1\u0157"+
    "\15\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\11\10\1\u0166\16\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\24\10\1\221\3\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\24\10\1\u0167\3\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\11\10\1\u0168"+
    "\16\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\4\10\1\u0169\10\10\1\0\1\10\4\0\30\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\4\10\1\u016a\23\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\6\0\15\10\1\0\1\10\4\0"+
    "\6\10\1\u016b\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\6\0\15\10\1\0\1\10\4\0\1\10\1\u016c"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\6\0"+
    "\15\10\1\0\1\10\4\0\22\10\1\u016d\5\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\u0106\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\34\0\1\u016e\1\0\1\u016f\2\0\1\u0170"+
    "\1\u0171\1\u0172\1\u0173\5\0\1\u0174\3\0\1\u0175\72\0"+
    "\1\u0176\110\0\1\u0177\107\0\1\u0177\45\0\3\u0178\1\67"+
    "\1\0\1\u0178\1\0\4\u0178\1\0\1\u0178\4\0\1\u0178"+
    "\1\0\1\u0178\1\0\1\u0178\2\0\1\u0178\2\0\1\u0178"+
    "\1\67\4\0\1\u0178\11\0\4\u0178\16\0\1\u0178\10\0"+
    "\1\u0179\1\0\1\u0179\1\67\3\0\1\u0179\1\0\1\u0179"+
    "\22\0\1\67\16\0\4\u0179\27\0\1\u017a\1\0\1\u017a"+
    "\6\0\1\u017a\125\0\1\u0124\52\0\15\10\1\0\1\10"+
    "\4\0\20\10\1\u017b\7\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\20\10"+
    "\1\u011d\7\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\3\10\1\u0155\24\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\4\10\1\u017c\23\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\23\10\1\u017d\4\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\1\10"+
    "\1\145\26\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\11\10\1\u011c\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\15\10\1\u017e\12\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\5\10\1\u017f\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\2\10"+
    "\1\u017e\25\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\1\224\27\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\35\0\1\u0180\14\0"+
    "\1\u0181\75\0\1\u0171\100\0\1\u0180\102\0\1\u0182\104\0"+
    "\1\u0183\13\0\1\u0184\75\0\1\u0146\7\0\1\u015c\72\0"+
    "\1\u0185\15\0\1\u015d\66\0\1\u0186\105\0\1\u0187\111\0"+
    "\1\u0188\60\0\3\u0189\1\67\1\0\1\u0189\1\0\4\u0189"+
    "\1\0\1\u0189\4\0\1\u0189\1\0\1\u0189\1\0\1\u0189"+
    "\2\0\1\u0189\2\0\1\u0189\1\67\4\0\1\u0189\11\0"+
    "\4\u0189\16\0\1\u0189\10\0\1\u018a\1\0\1\u018a\1\67"+
    "\3\0\1\u018a\1\0\1\u018a\22\0\1\67\16\0\4\u018a"+
    "\27\0\1\u018b\1\0\1\u018b\6\0\1\u018b\72\0\4\10"+
    "\1\u018c\10\10\1\0\1\10\4\0\30\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\6\0\15\10\1\0\1\10"+
    "\4\0\13\10\1\221\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\6\0\15\10\1\0\1\10\4\0\4\10"+
    "\1\161\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\6\0\15\10\1\0\1\10\4\0\13\10\1\u012f\14\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\11\10\1\u018d\16\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\37\0\1\52\106\0\1\52"+
    "\100\0\1\u018e\122\0\1\u018f\67\0\1\u0190\116\0\1\u0191"+
    "\146\0\1\u0192\51\0\1\u0193\73\0\1\u0194\57\0\3\u0195"+
    "\1\67\1\0\1\u0195\1\0\4\u0195\1\0\1\u0195\4\0"+
    "\1\u0195\1\0\1\u0195\1\0\1\u0195\2\0\1\u0195\2\0"+
    "\1\u0195\1\67\4\0\1\u0195\11\0\4\u0195\16\0\1\u0195"+
    "\10\0\1\u0196\1\0\1\u0196\1\67\3\0\1\u0196\1\0"+
    "\1\u0196\22\0\1\67\16\0\4\u0196\27\0\1\u0197\1\0"+
    "\1\u0197\6\0\1\u0197\72\0\15\10\1\0\1\10\4\0"+
    "\7\10\1\u0198\1\10\1\u011c\6\10\1\u0101\7\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\6\0\15\10\1\0"+
    "\1\10\4\0\1\10\1\u0199\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\35\0\1\u019a\112\0\1\u019b\102\0"+
    "\1\u019c\3\0\1\u019d\73\0\1\u0183\111\0\1\52\105\0"+
    "\1\u0128\113\0\1\u019e\52\0\3\u019f\1\67\1\0\1\u019f"+
    "\1\0\4\u019f\1\0\1\u019f\4\0\1\u019f\1\0\1\u019f"+
    "\1\0\1\u019f\2\0\1\u019f\2\0\1\u019f\1\67\4\0"+
    "\1\u019f\11\0\4\u019f\16\0\1\u019f\10\0\1\u01a0\1\0"+
    "\1\u01a0\1\67\3\0\1\u01a0\1\0\1\u01a0\22\0\1\67"+
    "\16\0\4\u01a0\27\0\1\u01a1\1\0\1\u01a1\6\0\1\u01a1"+
    "\72\0\15\10\1\0\1\10\4\0\14\10\1\u01a2\13\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\6\0\15\10"+
    "\1\0\1\10\4\0\10\10\1\213\17\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\47\0\1\52\75\0\1\u01a3"+
    "\77\0\1\u01a4\105\0\1\u0180\105\0\1\u01a5\64\0\3\u01a6"+
    "\1\67\1\0\1\u01a6\1\0\4\u01a6\1\0\1\u01a6\4\0"+
    "\1\u01a6\1\0\1\u01a6\1\0\1\u01a6\2\0\1\u01a6\2\0"+
    "\1\u01a6\1\67\4\0\1\u01a6\11\0\4\u01a6\16\0\1\u01a6"+
    "\10\0\1\u01a7\1\0\1\u01a7\1\67\3\0\1\u01a7\1\0"+
    "\1\u01a7\22\0\1\67\16\0\4\u01a7\27\0\1\u01a8\1\0"+
    "\1\u01a8\6\0\1\u01a8\72\0\15\10\1\0\1\10\4\0"+
    "\14\10\1\254\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\31\0\1\u01a9\116\0\1\u01aa\77\0\1\u0192\61\0"+
    "\3\u01ab\1\67\1\0\1\u01ab\1\0\4\u01ab\1\0\1\u01ab"+
    "\4\0\1\u01ab\1\0\1\u01ab\1\0\1\u01ab\2\0\1\u01ab"+
    "\2\0\1\u01ab\1\67\4\0\1\u01ab\11\0\4\u01ab\16\0"+
    "\1\u01ab\10\0\1\u01ac\1\0\1\u01ac\1\67\3\0\1\u01ac"+
    "\1\0\1\u01ac\22\0\1\67\16\0\4\u01ac\27\0\1\u01ad"+
    "\1\0\1\u01ad\6\0\1\u01ad\130\0\1\u01ae\73\0\1\u01af"+
    "\63\0\3\u01b0\1\67\1\0\1\u01b0\1\0\4\u01b0\1\0"+
    "\1\u01b0\4\0\1\u01b0\1\0\1\u01b0\1\0\1\u01b0\2\0"+
    "\1\u01b0\2\0\1\u01b0\1\67\4\0\1\u01b0\11\0\4\u01b0"+
    "\16\0\1\u01b0\10\0\1\u01b1\1\0\1\u01b1\1\67\3\0"+
    "\1\u01b1\1\0\1\u01b1\22\0\1\67\16\0\4\u01b1\27\0"+
    "\1\u01b2\1\0\1\u01b2\6\0\1\u01b2\126\0\1\u01b3\77\0"+
    "\1\52\61\0\3\u01b4\1\67\1\0\1\u01b4\1\0\4\u01b4"+
    "\1\0\1\u01b4\4\0\1\u01b4\1\0\1\u01b4\1\0\1\u01b4"+
    "\2\0\1\u01b4\2\0\1\u01b4\1\67\4\0\1\u01b4\11\0"+
    "\4\u01b4\16\0\1\u01b4\10\0\1\u01b5\1\0\1\u01b5\1\67"+
    "\3\0\1\u01b5\1\0\1\u01b5\22\0\1\67\16\0\4\u01b5"+
    "\27\0\1\u01b6\1\0\1\u01b6\6\0\1\u01b6\140\0\1\u0192"+
    "\41\0\3\u01b7\1\67\1\0\1\u01b7\1\0\4\u01b7\1\0"+
    "\1\u01b7\4\0\1\u01b7\1\0\1\u01b7\1\0\1\u01b7\2\0"+
    "\1\u01b7\2\0\1\u01b7\1\67\4\0\1\u01b7\11\0\4\u01b7"+
    "\16\0\1\u01b7\10\0\1\u01b8\1\0\1\u01b8\1\67\3\0"+
    "\1\u01b8\1\0\1\u01b8\22\0\1\67\16\0\4\u01b8\27\0"+
    "\1\u01b9\1\0\1\u01b9\6\0\1\u01b9\74\0\3\u01ba\1\67"+
    "\1\0\1\u01ba\1\0\4\u01ba\1\0\1\u01ba\4\0\1\u01ba"+
    "\1\0\1\u01ba\1\0\1\u01ba\2\0\1\u01ba\2\0\1\u01ba"+
    "\1\67\4\0\1\u01ba\11\0\4\u01ba\16\0\1\u01ba\10\0"+
    "\1\u01bb\1\0\1\u01bb\1\67\3\0\1\u01bb\1\0\1\u01bb"+
    "\22\0\1\67\16\0\4\u01bb\27\0\1\u01bc\1\0\1\u01bc"+
    "\6\0\1\u01bc\77\0\1\67\30\0\1\67\51\0\1\u01bd"+
    "\1\0\1\u01bd\1\67\3\0\1\u01bd\1\0\1\u01bd\22\0"+
    "\1\67\16\0\4\u01bd\27\0\1\u01be\1\0\1\u01be\6\0"+
    "\1\u01be\74\0\1\u01bf\1\0\1\u01bf\1\67\3\0\1\u01bf"+
    "\1\0\1\u01bf\22\0\1\67\16\0\4\u01bf\27\0\1\u01c0"+
    "\1\0\1\u01c0\6\0\1\u01c0\74\0\1\u01c1\1\0\1\u01c1"+
    "\1\67\3\0\1\u01c1\1\0\1\u01c1\22\0\1\67\16\0"+
    "\4\u01c1\27\0\1\u01c2\1\0\1\u01c2\6\0\1\u01c2\74\0"+
    "\1\u01c3\1\0\1\u01c3\1\67\3\0\1\u01c3\1\0\1\u01c3"+
    "\22\0\1\67\16\0\4\u01c3\27\0\1\u01c4\1\0\1\u01c4"+
    "\6\0\1\u01c4\74\0\1\u01ba\1\0\1\u01ba\1\67\3\0"+
    "\1\u01ba\1\0\1\u01ba\22\0\1\67\16\0\4\u01ba\27\0"+
    "\1\u01c5\1\0\1\u01c5\6\0\1\u01c5\74\0\1\u01c6\1\0"+
    "\1\u01c6\6\0\1\u01c6\74\0\1\u01c7\1\0\1\u01c7\6\0"+
    "\1\u01c7\74\0\1\u01c8\1\0\1\u01c8\6\0\1\u01c8\74\0"+
    "\1\u01c9\1\0\1\u01c9\6\0\1\u01c9\74\0\1\u01ca\1\0"+
    "\1\u01ca\6\0\1\u01ca\74\0\1\u01cb\1\0\1\u01cb\6\0"+
    "\1\u01cb\74\0\1\u01cc\1\0\1\u01cc\6\0\1\u01cc\74\0"+
    "\1\u01cd\1\0\1\u01cd\6\0\1\u01cd\74\0\1\u01ce\1\0"+
    "\1\u01ce\6\0\1\u01ce\74\0\1\u01cf\1\0\1\u01cf\6\0"+
    "\1\u01cf\74\0\1\u01d0\1\0\1\u01d0\6\0\1\u01d0\74\0"+
    "\1\u01d1\1\0\1\u01d1\6\0\1\u01d1\74\0\1\u01d2\1\0"+
    "\1\u01d2\6\0\1\u01d2\74\0\1\u01d3\1\0\1\u01d3\6\0"+
    "\1\u01d3\74\0\1\u01d4\1\0\1\u01d4\6\0\1\u01d4\74\0"+
    "\1\u01d5\1\0\1\u01d5\6\0\1\u01d5\74\0\1\u01d6\1\0"+
    "\1\u01d6\6\0\1\u01d6\74\0\1\u01d7\1\0\1\u01d7\6\0"+
    "\1\u01d7\74\0\1\u01d8\1\0\1\u01d8\6\0\1\u01d8\74\0"+
    "\1\u01d9\1\0\1\u01d9\6\0\1\u01d9\74\0\1\u01da\1\0"+
    "\1\u01da\6\0\1\u01da\74\0\1\u01db\1\0\1\u01db\6\0"+
    "\1\u01db\74\0\1\u01dc\1\0\1\u01dc\6\0\1\u01dc\74\0"+
    "\1\u01dd\1\0\1\u01dd\6\0\1\u01dd\74\0\1\u01de\1\0"+
    "\1\u01de\6\0\1\u01de\74\0\1\u01df\1\0\1\u01df\6\0"+
    "\1\u01df\74\0\1\u01e0\1\0\1\u01e0\6\0\1\u01e0\74\0"+
    "\1\u01e1\1\0\1\u01e1\6\0\1\u01e1\74\0\1\67\1\0"+
    "\1\67\6\0\1\67\66\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[32480];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\11\1\2\11\31\1\1\11\6\1\2\11"+
    "\4\1\1\11\3\0\1\1\1\0\76\1\1\11\2\1"+
    "\2\11\7\1\1\0\77\1\1\11\70\1\1\0\37\1"+
    "\1\0\3\1\5\0\25\1\3\0\3\1\3\0\23\1"+
    "\4\0\3\1\1\0\14\1\12\0\10\1\11\0\5\1"+
    "\10\0\4\1\6\0\3\1\4\0\2\1\3\0\2\1"+
    "\3\0\2\1\2\0\2\1\1\0\2\1\2\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\36\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public OCamlLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public OCamlLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public OCamlLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1802) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 4: 
          { return token(TokenType.OPERATOR)
          }
        case 14: break;
        case 12: 
          { return token(TokenType.SPECIAL_VALUE)
          }
        case 15: break;
        case 6: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 16: break;
        case 13: 
          { tokenLength += 2;
          }
        case 17: break;
        case 11: 
          { return token(TokenType.TYPE)
          }
        case 18: break;
        case 10: 
          { return token(TokenType.KEYWORD)
          }
        case 19: break;
        case 2: 
          { return token(TokenType.IDENTIFIER);
          }
        case 20: break;
        case 9: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 21: break;
        case 5: 
          { yybegin(STRING); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 22: break;
        case 3: 
          { return token(TokenType.NUMBER);
          }
        case 23: break;
        case 8: 
          { yybegin(YYINITIAL);
          }
        case 24: break;
        case 1: 
          { 
          }
        case 25: break;
        case 7: 
          { tokenLength += yylength();
          }
        case 26: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
