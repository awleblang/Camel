/* The following code was generated by JFlex 1.4.3 on 4/28/12 11:47 AM */

package camel.syntaxhighlighter;
 

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 4/28/12 11:47 AM from the specification file
 * <tt>ocaml.flex</tt>
 */
public final class CommentlessOCamlLexer extends JFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\5\1\3\1\2\1\0\1\3\1\1\16\5\4\0\1\3\1\77"+
    "\1\26\1\0\1\4\1\0\1\70\1\20\1\60\1\61\1\66\1\25"+
    "\1\0\1\25\1\23\1\67\1\6\1\17\1\63\1\62\1\65\1\15"+
    "\1\64\1\15\2\7\1\101\1\107\1\74\1\75\1\76\1\0\1\100"+
    "\1\13\1\16\1\104\1\22\1\24\1\22\5\21\1\11\2\21\1\14"+
    "\3\21\1\102\4\21\1\12\2\21\1\105\1\27\1\106\1\100\1\10"+
    "\1\0\1\30\1\37\1\42\1\32\1\34\1\50\1\40\1\52\1\41"+
    "\1\56\1\103\1\43\1\55\1\31\1\44\1\47\1\72\1\35\1\33"+
    "\1\36\1\51\1\57\1\45\1\46\1\54\1\53\1\107\1\71\1\107"+
    "\1\73\41\5\2\0\4\4\4\0\1\4\2\0\1\5\7\0\1\4"+
    "\4\0\1\4\5\0\27\4\1\0\37\4\1\0\u013f\4\31\0\162\4"+
    "\4\0\14\4\16\0\5\4\11\0\1\4\21\0\130\5\5\0\23\5"+
    "\12\0\1\4\13\0\1\4\1\0\3\4\1\0\1\4\1\0\24\4"+
    "\1\0\54\4\1\0\46\4\1\0\5\4\4\0\202\4\1\0\4\5"+
    "\3\0\105\4\1\0\46\4\2\0\2\4\6\0\20\4\41\0\46\4"+
    "\2\0\1\4\7\0\47\4\11\0\21\5\1\0\27\5\1\0\3\5"+
    "\1\0\1\5\1\0\2\5\1\0\1\5\13\0\33\4\5\0\3\4"+
    "\15\0\4\5\14\0\6\5\13\0\32\4\5\0\13\4\16\5\7\0"+
    "\12\5\4\0\2\4\1\5\143\4\1\0\1\4\10\5\1\0\6\5"+
    "\2\4\2\5\1\0\4\5\2\4\12\5\3\4\2\0\1\4\17\0"+
    "\1\5\1\4\1\5\36\4\33\5\2\0\3\4\60\0\46\4\13\5"+
    "\1\4\u014f\0\3\5\66\4\2\0\1\5\1\4\20\5\2\0\1\4"+
    "\4\5\3\0\12\4\2\5\2\0\12\5\21\0\3\5\1\0\10\4"+
    "\2\0\2\4\2\0\26\4\1\0\7\4\1\0\1\4\3\0\4\4"+
    "\2\0\1\5\1\4\7\5\2\0\2\5\2\0\3\5\11\0\1\5"+
    "\4\0\2\4\1\0\3\4\2\5\2\0\12\5\4\4\15\0\3\5"+
    "\1\0\6\4\4\0\2\4\2\0\26\4\1\0\7\4\1\0\2\4"+
    "\1\0\2\4\1\0\2\4\2\0\1\5\1\0\5\5\4\0\2\5"+
    "\2\0\3\5\13\0\4\4\1\0\1\4\7\0\14\5\3\4\14\0"+
    "\3\5\1\0\11\4\1\0\3\4\1\0\26\4\1\0\7\4\1\0"+
    "\2\4\1\0\5\4\2\0\1\5\1\4\10\5\1\0\3\5\1\0"+
    "\3\5\2\0\1\4\17\0\2\4\2\5\2\0\12\5\1\0\1\4"+
    "\17\0\3\5\1\0\10\4\2\0\2\4\2\0\26\4\1\0\7\4"+
    "\1\0\2\4\1\0\5\4\2\0\1\5\1\4\6\5\3\0\2\5"+
    "\2\0\3\5\10\0\2\5\4\0\2\4\1\0\3\4\4\0\12\5"+
    "\1\0\1\4\20\0\1\5\1\4\1\0\6\4\3\0\3\4\1\0"+
    "\4\4\3\0\2\4\1\0\1\4\1\0\2\4\3\0\2\4\3\0"+
    "\3\4\3\0\10\4\1\0\3\4\4\0\5\5\3\0\3\5\1\0"+
    "\4\5\11\0\1\5\17\0\11\5\11\0\1\4\7\0\3\5\1\0"+
    "\10\4\1\0\3\4\1\0\27\4\1\0\12\4\1\0\5\4\4\0"+
    "\7\5\1\0\3\5\1\0\4\5\7\0\2\5\11\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0"+
    "\12\4\1\0\5\4\2\0\1\5\1\4\7\5\1\0\3\5\1\0"+
    "\4\5\7\0\2\5\7\0\1\4\1\0\2\4\4\0\12\5\22\0"+
    "\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0\20\4\4\0"+
    "\6\5\2\0\3\5\1\0\4\5\11\0\1\5\10\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\22\4\3\0\30\4\1\0\11\4\1\0"+
    "\1\4\2\0\7\4\3\0\1\5\4\0\6\5\1\0\1\5\1\0"+
    "\10\5\22\0\2\5\15\0\60\4\1\5\2\4\7\5\4\0\10\4"+
    "\10\5\1\0\12\5\47\0\2\4\1\0\1\4\2\0\2\4\1\0"+
    "\1\4\2\0\1\4\6\0\4\4\1\0\7\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\4\2\0\2\4\1\0\4\4\1\5\2\4\6\5"+
    "\1\0\2\5\1\4\2\0\5\4\1\0\1\4\1\0\6\5\2\0"+
    "\12\5\2\0\2\4\42\0\1\4\27\0\2\5\6\0\12\5\13\0"+
    "\1\5\1\0\1\5\1\0\1\5\4\0\2\5\10\4\1\0\42\4"+
    "\6\0\24\5\1\0\2\5\4\4\4\0\10\5\1\0\44\5\11\0"+
    "\1\5\71\0\42\4\1\0\5\4\1\0\2\4\1\0\7\5\3\0"+
    "\4\5\6\0\12\5\6\0\6\4\4\5\106\0\46\4\12\0\51\4"+
    "\7\0\132\4\5\0\104\4\5\0\122\4\6\0\7\4\1\0\77\4"+
    "\1\0\1\4\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4"+
    "\2\0\47\4\1\0\1\4\1\0\4\4\2\0\37\4\1\0\1\4"+
    "\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4\2\0\7\4"+
    "\1\0\7\4\1\0\27\4\1\0\37\4\1\0\1\4\1\0\4\4"+
    "\2\0\7\4\1\0\47\4\1\0\23\4\16\0\11\5\56\0\125\4"+
    "\14\0\u026c\4\2\0\10\4\12\0\32\4\5\0\113\4\3\0\3\4"+
    "\17\0\15\4\1\0\4\4\3\5\13\0\22\4\3\5\13\0\22\4"+
    "\2\5\14\0\15\4\1\0\3\4\1\0\2\5\14\0\64\4\40\5"+
    "\3\0\1\4\3\0\2\4\1\5\2\0\12\5\41\0\3\5\2\0"+
    "\12\5\6\0\130\4\10\0\51\4\1\5\126\0\35\4\3\0\14\5"+
    "\4\0\14\5\12\0\12\5\36\4\2\0\5\4\u038b\0\154\4\224\0"+
    "\234\4\4\0\132\4\6\0\26\4\2\0\6\4\2\0\46\4\2\0"+
    "\6\4\2\0\10\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\37\4\2\0\65\4\1\0\7\4\1\0\1\4\3\0\3\4\1\0"+
    "\7\4\3\0\4\4\2\0\6\4\4\0\15\4\5\0\3\4\1\0"+
    "\7\4\17\0\4\5\32\0\5\5\20\0\2\4\23\0\1\4\13\0"+
    "\4\5\6\0\6\5\1\0\1\4\15\0\1\4\40\0\22\4\36\0"+
    "\15\5\4\0\1\5\3\0\6\5\27\0\1\4\4\0\1\4\2\0"+
    "\12\4\1\0\1\4\3\0\5\4\6\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\4\4\1\0\3\4\1\0\7\4\3\0\3\4\5\0"+
    "\5\4\26\0\44\4\u0e81\0\3\4\31\0\11\4\6\5\1\0\5\4"+
    "\2\0\5\4\4\0\126\4\2\0\2\5\2\0\3\4\1\0\137\4"+
    "\5\0\50\4\4\0\136\4\21\0\30\4\70\0\20\4\u0200\0\u19b6\4"+
    "\112\0\u51a6\4\132\0\u048d\4\u0773\0\u2ba4\4\u215c\0\u012e\4\2\0\73\4"+
    "\225\0\7\4\14\0\5\4\5\0\1\4\1\5\12\4\1\0\15\4"+
    "\1\0\5\4\1\0\1\4\1\0\2\4\1\0\2\4\1\0\154\4"+
    "\41\0\u016b\4\22\0\100\4\2\0\66\4\50\0\15\4\3\0\20\5"+
    "\20\0\4\5\17\0\2\4\30\0\3\4\31\0\1\4\6\0\5\4"+
    "\1\0\207\4\2\0\1\5\4\0\1\4\13\0\12\5\7\0\32\4"+
    "\4\0\1\4\1\0\32\4\12\0\132\4\3\0\6\4\2\0\6\4"+
    "\2\0\6\4\2\0\3\4\3\0\2\4\3\0\2\4\22\0\3\5"+
    "\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\1\1\3\2\1\3\3\4\1\3\1\5\1\1"+
    "\1\6\1\7\22\3\2\10\1\6\1\1\1\10\1\1"+
    "\3\6\1\10\2\3\1\10\1\11\2\12\1\13\1\1"+
    "\1\11\1\1\2\4\3\0\1\4\1\0\1\4\2\3"+
    "\1\14\1\3\1\15\10\3\1\15\13\3\1\15\4\3"+
    "\1\15\41\3\1\16\1\17\2\11\5\4\1\0\1\4"+
    "\2\3\1\6\3\3\1\6\1\3\1\16\7\3\1\6"+
    "\1\14\2\3\1\6\10\3\1\14\15\3\1\6\11\3"+
    "\1\15\1\3\1\6\1\3\1\6\4\3\1\11\3\4"+
    "\3\3\1\6\20\3\1\14\14\3\1\14\1\15\17\3"+
    "\3\4\1\0\23\3\1\15\13\3\1\0\3\4\5\0"+
    "\3\3\1\14\21\3\3\0\3\4\3\0\23\3\4\0"+
    "\3\4\1\0\14\3\12\0\3\4\5\3\11\0\3\4"+
    "\2\3\10\0\2\4\2\3\6\0\2\4\1\3\4\0"+
    "\2\4\3\0\2\4\3\0\2\4\2\0\2\4\1\0"+
    "\2\4\2\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\36\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[482];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\110\0\220\0\330\0\u0120\0\330\0\u0168\0\u01b0"+
    "\0\u01f8\0\u0240\0\u0288\0\u02d0\0\u0318\0\u0360\0\u03a8\0\330"+
    "\0\u03f0\0\u0438\0\u0480\0\u04c8\0\u0510\0\u0558\0\u05a0\0\u05e8"+
    "\0\u0630\0\u0678\0\u06c0\0\u0708\0\u0750\0\u0798\0\u07e0\0\u0828"+
    "\0\u0870\0\u08b8\0\u0900\0\330\0\u0948\0\u0990\0\u09d8\0\u0a20"+
    "\0\u0a68\0\u0ab0\0\330\0\u0af8\0\u0b40\0\u0b88\0\u0bd0\0\u0c18"+
    "\0\u0c60\0\330\0\330\0\u0ca8\0\u0cf0\0\u0d38\0\u0d80\0\330"+
    "\0\u0dc8\0\u0e10\0\u0e58\0\u0ea0\0\u0ee8\0\u01b0\0\u0f30\0\u0f78"+
    "\0\330\0\u0fc0\0\u1008\0\u1050\0\u1098\0\u10e0\0\u1128\0\u1170"+
    "\0\u11b8\0\u1200\0\u1248\0\u1290\0\u12d8\0\u1320\0\u1368\0\u13b0"+
    "\0\u13f8\0\u1440\0\u1488\0\u14d0\0\u1518\0\u1560\0\u15a8\0\u01b0"+
    "\0\u15f0\0\u1638\0\u1680\0\u16c8\0\u1710\0\u1758\0\u17a0\0\u17e8"+
    "\0\u1830\0\u1878\0\u18c0\0\u1908\0\u1950\0\u1998\0\u19e0\0\u1a28"+
    "\0\u1a70\0\u1ab8\0\u1b00\0\u1b48\0\u1b90\0\u1bd8\0\u1c20\0\u1c68"+
    "\0\u1cb0\0\u1cf8\0\u1d40\0\u1d88\0\u1dd0\0\u1e18\0\u1e60\0\u1ea8"+
    "\0\u1ef0\0\u1f38\0\u1f80\0\u1fc8\0\u2010\0\u2058\0\330\0\330"+
    "\0\u20a0\0\u20e8\0\u2130\0\u2178\0\u21c0\0\u2208\0\u2250\0\u2298"+
    "\0\u22e0\0\u2328\0\u2370\0\u01b0\0\u23b8\0\u2400\0\u2448\0\u2490"+
    "\0\u24d8\0\u01b0\0\u2520\0\u2568\0\u25b0\0\u25f8\0\u2640\0\u2688"+
    "\0\u26d0\0\u2718\0\u01b0\0\u2760\0\u27a8\0\u27f0\0\u2838\0\u2880"+
    "\0\u28c8\0\u2910\0\u2958\0\u29a0\0\u29e8\0\u2a30\0\u2a78\0\u2ac0"+
    "\0\u2b08\0\u2b50\0\u2b98\0\u2be0\0\u2c28\0\u2c70\0\u2cb8\0\u2d00"+
    "\0\u2d48\0\u2d90\0\u2dd8\0\u2e20\0\u2e68\0\u2eb0\0\u2ef8\0\u2f40"+
    "\0\u2f88\0\u2fd0\0\u3018\0\u3060\0\u30a8\0\u30f0\0\u3138\0\u3180"+
    "\0\u31c8\0\u3210\0\u3258\0\u32a0\0\u32e8\0\u3330\0\u3378\0\330"+
    "\0\u33c0\0\u3408\0\u3450\0\u3498\0\u34e0\0\u3528\0\u3570\0\u35b8"+
    "\0\u3600\0\u3648\0\u3690\0\u36d8\0\u3720\0\u3768\0\u37b0\0\u37f8"+
    "\0\u3840\0\u3888\0\u38d0\0\u3918\0\u3960\0\u39a8\0\u39f0\0\u3a38"+
    "\0\u3a80\0\u3ac8\0\u3b10\0\u3b58\0\u3ba0\0\u3be8\0\u3c30\0\u3c78"+
    "\0\u3cc0\0\u3d08\0\u3d50\0\u3d98\0\u3de0\0\u3e28\0\u3e70\0\u3eb8"+
    "\0\u3f00\0\u3f48\0\u3f90\0\u3fd8\0\u4020\0\u4068\0\u40b0\0\u40f8"+
    "\0\u4140\0\u4188\0\u41d0\0\u4218\0\u4260\0\u42a8\0\u42f0\0\u4338"+
    "\0\u4380\0\u43c8\0\u4410\0\u4458\0\u44a0\0\u44e8\0\u4530\0\u4578"+
    "\0\u45c0\0\u4608\0\u4650\0\u4698\0\u46e0\0\u4728\0\u4770\0\u47b8"+
    "\0\u4800\0\u4848\0\u4890\0\u48d8\0\u4920\0\u4968\0\u49b0\0\u49f8"+
    "\0\u4a40\0\u4a88\0\u4ad0\0\u4b18\0\u4b60\0\u4ba8\0\u4bf0\0\u4c38"+
    "\0\u4c80\0\u4cc8\0\u4d10\0\u4d58\0\u4da0\0\u4de8\0\u4e30\0\u4e78"+
    "\0\u4ec0\0\u4f08\0\u4f50\0\u4f98\0\u4fe0\0\u5028\0\u5070\0\u50b8"+
    "\0\u5100\0\u5148\0\u5190\0\u51d8\0\u5220\0\u5268\0\u52b0\0\u52f8"+
    "\0\u5340\0\u5388\0\u53d0\0\u5418\0\u5460\0\u54a8\0\u54f0\0\u5538"+
    "\0\u5580\0\u55c8\0\u5610\0\u5658\0\u56a0\0\u56e8\0\u5730\0\u5778"+
    "\0\u57c0\0\u5808\0\u5850\0\u5898\0\u58e0\0\u5928\0\u5970\0\u59b8"+
    "\0\u5a00\0\u5a48\0\u5a90\0\u5ad8\0\u5b20\0\u5b68\0\u5bb0\0\u5bf8"+
    "\0\u2718\0\u5c40\0\u5c88\0\u5cd0\0\u5d18\0\u5d60\0\u5da8\0\u5df0"+
    "\0\u5e38\0\u5e80\0\u5ec8\0\u5f10\0\u5f58\0\u5fa0\0\u5fe8\0\u2490"+
    "\0\u6030\0\u6078\0\u60c0\0\u6108\0\u6150\0\u6198\0\u61e0\0\u6228"+
    "\0\u6270\0\u62b8\0\u6300\0\u6348\0\u6390\0\u63d8\0\u6420\0\u6468"+
    "\0\u64b0\0\u64f8\0\u6540\0\u6588\0\u65d0\0\u6618\0\u6660\0\u66a8"+
    "\0\u66f0\0\u6738\0\u6780\0\u67c8\0\u6810\0\u6858\0\u68a0\0\u68e8"+
    "\0\u6930\0\u6978\0\u69c0\0\u6a08\0\u6a50\0\u6a98\0\u6ae0\0\u6b28"+
    "\0\u6b70\0\u6bb8\0\u6c00\0\u6c48\0\u6c90\0\u6cd8\0\u6d20\0\u6d68"+
    "\0\u6db0\0\u6df8\0\u6e40\0\u6e88\0\u6ed0\0\u6f18\0\u6f60\0\u6fa8"+
    "\0\u6ff0\0\u7038\0\u7080\0\u70c8\0\u7110\0\u7158\0\u71a0\0\u71e8"+
    "\0\u7230\0\u7278\0\u72c0\0\u7308\0\u7350\0\u7398\0\u73e0\0\u7428"+
    "\0\u7470\0\u74b8\0\u7500\0\u7548\0\u7590\0\u75d8\0\u7620\0\u7668"+
    "\0\u76b0\0\u76f8\0\u7740\0\u7788\0\u77d0\0\u7818\0\u7860\0\u78a8"+
    "\0\u78f0\0\u7938\0\u7980\0\u79c8\0\u7a10\0\u7a58\0\u7aa0\0\u7ae8"+
    "\0\u7b30\0\u7b78\0\u7bc0\0\u7c08\0\u7c50\0\u7c98\0\u7ce0\0\u7d28"+
    "\0\u7d70\0\u7db8\0\u7e00\0\u7e48\0\u7e90\0\u7ed8\0\u7f20\0\u7f68"+
    "\0\u7fb0\0\u7ff8\0\u8040\0\u8088\0\u80d0\0\u8118\0\u8160\0\u81a8"+
    "\0\u81f0\0\u8238";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[482];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\1\5\1\6\1\7\1\10\1\4\1\11\1\12"+
    "\1\13\1\14\3\10\1\12\1\10\1\12\1\15\2\10"+
    "\1\16\1\10\1\17\1\20\1\4\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\10\1\31\1\32"+
    "\1\33\1\34\1\35\1\10\1\36\1\37\1\40\3\10"+
    "\1\41\1\10\1\42\1\43\1\44\4\12\1\45\1\17"+
    "\1\46\1\47\1\10\1\50\1\51\3\52\1\53\1\54"+
    "\1\55\1\10\1\56\1\57\2\44\1\60\1\61\1\62"+
    "\23\60\1\63\1\64\60\60\1\65\1\61\1\62\15\65"+
    "\1\63\6\65\1\66\60\65\112\0\1\6\110\0\1\7"+
    "\110\0\14\10\1\0\2\10\1\0\1\10\3\0\30\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\11\0\3\67"+
    "\1\70\1\71\1\0\1\72\1\67\1\73\1\67\2\0"+
    "\1\70\1\74\1\75\5\0\1\70\1\0\1\75\2\0"+
    "\1\73\3\0\1\70\1\72\1\0\1\71\1\0\1\70"+
    "\11\0\4\67\30\0\3\12\1\70\3\0\1\12\1\0"+
    "\1\12\2\0\1\70\1\74\1\75\5\0\1\70\1\0"+
    "\1\75\6\0\1\70\4\0\1\70\11\0\4\12\26\0"+
    "\2\10\3\13\4\10\1\13\1\10\1\13\1\0\1\10"+
    "\1\76\1\74\1\77\3\0\2\10\1\76\1\10\1\77"+
    "\13\10\1\76\7\10\2\0\4\13\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\100\16\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\14\0\4\101\1\0\1\101\2\0\2\101\1\0"+
    "\1\101\3\0\30\101\12\0\1\101\7\0\3\101\11\0"+
    "\3\74\4\0\1\74\1\0\1\74\42\0\4\74\45\0"+
    "\1\53\70\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\102\1\10\1\103\1\10\1\104\1\105\1\106"+
    "\2\10\1\107\15\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\110\3\10\1\111\7\10\1\112\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\4\10\1\113\7\10\1\114\13\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\1\10\1\115\4\10"+
    "\1\116\2\10\1\117\16\10\2\0\4\10\4\0\1\120"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\102\11\10\1\121\2\10\1\122\1\123"+
    "\10\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\1\124\3\10"+
    "\1\125\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\1\126"+
    "\4\10\1\127\6\10\1\130\5\10\1\131\1\10\1\132"+
    "\3\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\4\10\1\133"+
    "\7\10\1\134\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\135\6\10\1\136\7\10\1\130\7\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\4\10\1\137\6\10\1\140"+
    "\1\141\5\10\1\142\5\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\143\1\144\1\145\1\146\1\147\4\10\1\150"+
    "\2\10\1\151\1\10\1\152\11\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\130\1\10\1\153\7\10\1\154"+
    "\1\130\1\155\6\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\156\10\10\1\157\5\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\160\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\161\2\10\1\112\1\10\1\145\5\10"+
    "\1\162\1\163\4\10\1\164\6\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\165\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\166\3\10\1\167\4\10\1\170\2\10"+
    "\1\171\4\10\1\172\6\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\173\10\10\1\174\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\64\0\1\101\51\0\1\53\42\0"+
    "\1\53\111\0\1\53\110\0\1\53\43\0\1\17\157\0"+
    "\2\53\106\0\1\53\107\0\1\53\3\0\1\53\12\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\6\10\1\175"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\22\10\1\176"+
    "\5\10\2\0\4\10\4\0\1\10\7\0\3\10\111\0"+
    "\1\177\1\0\1\60\2\0\23\60\2\0\60\60\2\0"+
    "\1\62\105\0\2\200\1\0\3\200\1\201\1\200\1\202"+
    "\4\200\1\202\1\200\1\201\42\200\2\201\2\202\22\200"+
    "\1\65\2\0\15\65\1\0\6\65\1\0\60\65\2\200"+
    "\1\0\105\200\6\0\3\67\4\0\1\67\1\0\1\67"+
    "\2\0\1\70\1\74\1\75\5\0\1\70\1\0\1\75"+
    "\13\0\1\70\11\0\4\67\30\0\1\203\2\204\2\0"+
    "\1\204\1\0\3\204\2\0\1\204\1\0\1\204\3\0"+
    "\1\204\1\0\1\204\1\0\1\204\2\0\1\204\2\0"+
    "\1\204\5\0\1\204\11\0\4\204\16\0\1\204\11\0"+
    "\1\205\1\0\1\205\4\0\1\205\1\0\1\205\42\0"+
    "\4\205\30\0\1\206\1\0\1\206\6\0\1\206\76\0"+
    "\3\74\4\0\1\74\1\0\1\74\2\0\1\70\1\0"+
    "\1\75\5\0\1\70\1\0\1\75\13\0\1\70\11\0"+
    "\4\74\30\0\3\207\4\0\1\207\1\0\1\207\5\0"+
    "\1\210\34\0\4\207\26\0\2\10\3\211\4\10\1\211"+
    "\1\10\1\211\1\0\2\10\1\0\1\10\1\210\2\0"+
    "\30\10\2\0\4\211\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\3\10\1\212"+
    "\24\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\2\10\1\130"+
    "\25\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\3\10\1\213"+
    "\1\10\1\214\3\10\1\215\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\216\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\217\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\3\10\1\220\24\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\14\10\1\221\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\222\4\10\1\223\21\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\10\10\1\224\4\10\1\130\12\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\6\10\1\214\21\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\12\10\1\225\15\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\1\10\1\226\13\10"+
    "\1\227\12\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\2\10"+
    "\1\214\25\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\2\10"+
    "\1\230\2\10\1\231\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\232\6\10\1\130\17\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\5\10\1\112\22\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\3\10\1\226\24\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\10\1\233\4\10\1\234\2\10"+
    "\1\112\1\235\4\10\1\236\10\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\3\10\1\237\24\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\240\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\241\11\10\1\130\5\10\1\214\7\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\1\10\1\232\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\21\10\1\242\2\10"+
    "\1\130\3\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\4\10"+
    "\1\243\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\17\10"+
    "\1\226\10\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\10\10"+
    "\1\244\17\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\14\10"+
    "\1\245\13\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\4\10\1\246\7\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\247\2\10\1\250\1\251\5\10\1\252"+
    "\1\10\1\253\5\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\254\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\255\16\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\256\27\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\1\10"+
    "\1\257\1\10\1\232\21\10\1\260\2\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\261\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\115\21\10\1\262\4\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\14\10\1\112\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\4\10\1\263\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\5\10\1\214\5\10\1\214"+
    "\14\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\6\10\1\130"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\3\10\1\264"+
    "\24\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\5\10\1\214"+
    "\2\10\1\265\17\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\225\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\26\10\1\266\1\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\4\10\1\243\1\10\1\267\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\270\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\271\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\4\10\1\243\4\10\1\272\16\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\4\10\1\273\4\10\1\274"+
    "\16\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\11\10\1\275"+
    "\1\10\1\121\14\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\276\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\5\10\1\130\22\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\277\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\264\16\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\300\7\10\1\301\11\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\302\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\301\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\2\10\1\303\25\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\304\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\13\10\1\130\14\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\305\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\306\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\307\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\11\0\1\202\1\0\1\202\4\0\1\202"+
    "\1\0\1\202\42\0\4\202\30\0\1\310\1\0\1\310"+
    "\4\0\1\310\1\0\1\310\42\0\4\310\30\0\1\203"+
    "\2\204\1\70\1\0\1\204\1\0\3\204\2\0\1\204"+
    "\1\0\1\204\3\0\1\204\1\0\1\204\1\0\1\204"+
    "\2\0\1\204\2\0\1\204\1\70\4\0\1\204\11\0"+
    "\4\204\16\0\1\204\11\0\3\311\1\70\1\0\1\311"+
    "\1\0\3\311\2\0\1\311\1\0\1\311\3\0\1\311"+
    "\1\0\1\311\1\0\1\311\2\0\1\311\2\0\1\311"+
    "\1\70\4\0\1\311\11\0\4\311\16\0\1\311\11\0"+
    "\1\312\1\0\1\312\1\70\3\0\1\312\1\0\1\312"+
    "\23\0\1\70\16\0\4\312\30\0\1\313\1\0\1\313"+
    "\6\0\1\313\76\0\3\207\4\0\1\207\1\0\1\207"+
    "\2\0\1\70\7\0\1\70\15\0\1\70\11\0\4\207"+
    "\30\0\3\207\4\0\1\207\1\0\1\207\42\0\4\207"+
    "\26\0\2\10\3\211\4\10\1\211\1\10\1\211\1\0"+
    "\1\10\1\76\1\0\1\10\3\0\2\10\1\76\15\10"+
    "\1\76\7\10\2\0\4\211\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\6\10"+
    "\1\314\21\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\4\10"+
    "\1\315\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\1\10"+
    "\1\214\26\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\1\316"+
    "\27\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\1\10\1\317"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\4\10\1\320\7\10\1\0\2\10\1\0\1\10\3\0"+
    "\30\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\3\10\1\214"+
    "\24\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\11\10\1\321"+
    "\16\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\4\10\1\322\7\10\1\0\2\10\1\0\1\10\3\0"+
    "\30\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\5\10\1\214"+
    "\22\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\4\10\1\130"+
    "\23\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\1\10\1\323"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\4\10\1\324"+
    "\4\10\1\325\2\10\1\326\13\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\327\7\10\1\330\6\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\22\10\1\214\5\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\4\10\1\331\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\4\10\1\332\23\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\25\10\1\333\2\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\11\10\1\334\16\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\3\10\1\335\24\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\2\10\1\336\25\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\1\10\1\337\2\10\1\130"+
    "\23\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\1\10\1\130"+
    "\26\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\11\10\1\243"+
    "\16\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\13\10\1\340"+
    "\14\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\12\10\1\341"+
    "\15\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\4\10\1\342\7\10\1\0\2\10\1\0\1\10\3\0"+
    "\30\10\2\0\1\343\1\10\1\344\1\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\345\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\5\10\1\214\5\10\1\346\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\11\10\1\347\16\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\4\10\1\350\23\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\14\10\1\351\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\13\10\1\214\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\3\10\1\352\24\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\3\10\1\353\24\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\17\10\1\354\10\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\5\10\1\355\22\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\24\10\1\356\3\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\16\10\1\357\11\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\6\10\1\233\21\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\13\10\1\360\1\0"+
    "\2\10\1\0\1\10\3\0\30\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\4\10\1\330\23\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\361\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\4\10\1\246\7\10\1\0"+
    "\2\10\1\0\1\10\3\0\30\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\22\10\1\130\5\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\13\10\1\226\14\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\362\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\363\25\10\1\364\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\13\10\1\365\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\366\13\10\1\225\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\12\10\1\367\15\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\12\10\1\271\15\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\4\10\1\370"+
    "\7\10\1\0\2\10\1\0\1\10\3\0\30\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\22\10\1\371\5\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\4\10\1\320"+
    "\7\10\1\0\2\10\1\0\1\10\3\0\20\10\1\214"+
    "\1\272\6\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\1\372"+
    "\27\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\6\10\1\373"+
    "\21\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\11\10\1\374"+
    "\16\10\2\0\4\10\4\0\1\10\7\0\3\10\7\0"+
    "\14\10\1\0\2\10\1\0\1\10\3\0\5\10\1\375"+
    "\22\10\2\0\4\10\4\0\1\10\7\0\3\10\11\0"+
    "\3\376\1\70\1\0\1\376\1\0\3\376\2\0\1\376"+
    "\1\0\1\376\3\0\1\376\1\0\1\376\1\0\1\376"+
    "\2\0\1\376\2\0\1\376\1\70\4\0\1\376\11\0"+
    "\4\376\16\0\1\376\11\0\1\377\1\0\1\377\1\70"+
    "\3\0\1\377\1\0\1\377\23\0\1\70\16\0\4\377"+
    "\30\0\1\u0100\1\0\1\u0100\6\0\1\u0100\74\0\14\10"+
    "\1\0\2\10\1\u0101\1\10\3\0\30\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\5\10\1\147\22\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\24\10\1\233\3\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\1\10\1\214\2\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\20\10\1\u0102\7\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\27\10\1\u0103\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\u0104\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\u0105\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\u0106\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\222\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\21\10\1\u0107\6\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\u0108\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\12\10\1\147\15\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\5\10\1\u0109\22\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\17\10\1\u010a\10\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\13\10\1\214\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\13\10\1\u010b\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\4\10\1\214\23\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\4\10\1\u010c\7\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\12\10\1\u010d\15\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\4\10\1\u010e\7\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\22\10\1\u010f\5\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\14\10\1\u0110\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\30\10\2\0\1\10\1\233\2\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\30\10\2\0\3\10\1\233\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\u0111\16\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\21\10\1\u0112\6\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\u0113\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\5\10\1\u0114\22\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\5\10\1\335\22\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\3\10\1\u0115\24\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\u0116\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\351\27\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\4\10\1\u0117\7\10\1\0\2\10\1\0\1\10"+
    "\3\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\4\10\1\264\7\10\1\0\2\10\1\0\1\10"+
    "\3\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\17\10"+
    "\1\214\10\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\2\10\1\214\11\10\1\0\2\10\1\0\1\10"+
    "\3\0\17\10\1\214\10\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\14\10\1\u0118\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\5\10\1\u0119\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\u0119\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\u011a\27\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\15\10\1\u011b\12\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\340\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\u011c\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\u011d\6\10\1\u011e\7\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\14\10\1\102\13\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\7\10\1\272\20\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\21\10\1\u011f\6\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\u0120\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\u0121"+
    "\1\10\3\0\30\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\11\0\3\u0122\1\70\1\0\1\u0122\1\0\3\u0122"+
    "\2\0\1\u0122\1\0\1\u0122\3\0\1\u0122\1\0\1\u0122"+
    "\1\0\1\u0122\2\0\1\u0122\2\0\1\u0122\1\70\4\0"+
    "\1\u0122\11\0\4\u0122\16\0\1\u0122\11\0\1\u0123\1\0"+
    "\1\u0123\1\70\3\0\1\u0123\1\0\1\u0123\23\0\1\70"+
    "\16\0\4\u0123\30\0\1\u0124\1\0\1\u0124\6\0\1\u0124"+
    "\121\0\1\u0125\3\0\1\u0126\1\u0127\4\0\1\u0128\6\0"+
    "\1\u0129\41\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\13\10\1\u012a\14\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\4\10\1\u012b\23\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\u012c\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\130\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\5\10\1\222\22\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\222\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\10\10\1\u012d\17\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\u011f\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\u012e\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\u012f\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\11\10\1\u011d\1\10\1\u0130\4\10\1\u0102\7\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\1\u0131\27\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\14\10\1\u0132\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\u0133\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\20\10\1\u0134\7\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\u0135\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\2\10\1\226\25\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u0136\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\147\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u0137\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\5\10\1\u0138\22\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\14\10\1\u0139\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\233\26\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\4\10\1\u013a\7\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\226\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u013b\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u013c\2\10\1\163\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\10\1\112\26\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\13\10\1\u013d\14\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\1\173\27\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\10\10\1\u013e\17\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\37\0\1\u013f\6\0\1\u0140\5\0"+
    "\1\u0141\44\0\3\u0142\1\70\1\0\1\u0142\1\0\3\u0142"+
    "\2\0\1\u0142\1\0\1\u0142\3\0\1\u0142\1\0\1\u0142"+
    "\1\0\1\u0142\2\0\1\u0142\2\0\1\u0142\1\70\4\0"+
    "\1\u0142\11\0\4\u0142\16\0\1\u0142\11\0\1\u0143\1\0"+
    "\1\u0143\1\70\3\0\1\u0143\1\0\1\u0143\23\0\1\70"+
    "\16\0\4\u0143\30\0\1\u0144\1\0\1\u0144\6\0\1\u0144"+
    "\126\0\1\u0145\105\0\1\u0146\116\0\1\53\100\0\1\u0147"+
    "\105\0\1\53\61\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\14\10\1\u0148\13\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u0149\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\20\10\1\252\7\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\4\10\1\u014a\7\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u013c\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\u014b\26\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\11\10\1\u014c\16\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\335\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\20\10\1\u014d\7\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\10\1\u014e\26\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\4\10\1\u014f\7\10\1\0\2\10"+
    "\1\0\1\10\3\0\30\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\13\10\1\u0150\14\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\6\10\1\u0151\21\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\20\10\1\u0152\7\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\7\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\u0153\27\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\20\10\1\u0154\7\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\u0155\1\10\1\u0156\1\u0157\4\10\1\u011d\1\u0158"+
    "\5\10\1\u0102\7\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\6\10\1\u0159\21\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\243\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\u015a\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\u015b\1\10\3\0"+
    "\30\10\2\0\4\10\4\0\1\10\7\0\3\10\36\0"+
    "\1\u015c\120\0\1\u015d\112\0\1\u015e\46\0\3\u015f\1\70"+
    "\1\0\1\u015f\1\0\3\u015f\2\0\1\u015f\1\0\1\u015f"+
    "\3\0\1\u015f\1\0\1\u015f\1\0\1\u015f\2\0\1\u015f"+
    "\2\0\1\u015f\1\70\4\0\1\u015f\11\0\4\u015f\16\0"+
    "\1\u015f\11\0\1\u0160\1\0\1\u0160\1\70\3\0\1\u0160"+
    "\1\0\1\u0160\23\0\1\70\16\0\4\u0160\30\0\1\u0161"+
    "\1\0\1\u0161\6\0\1\u0161\142\0\1\53\114\0\1\53"+
    "\61\0\1\u0162\62\0\14\10\1\0\2\10\1\0\1\10"+
    "\3\0\1\112\27\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\264\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\14\10\1\u0163\13\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\4\10\1\u0164\7\10\1\0\2\10\1\0"+
    "\1\10\3\0\30\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\335\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\4\10\1\u0165\7\10\1\0\2\10\1\0"+
    "\1\10\3\0\30\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\1\10\1\u0166\26\10\2\0\4\10\4\0\1\10\7\0"+
    "\3\10\7\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\3\10\1\u0156\6\10\1\u0158\15\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\u0167\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\24\10\1\222\3\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\24\10\1\u0168\3\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\11\10\1\u0169\16\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\4\10\1\u016a\7\10\1\0"+
    "\2\10\1\0\1\10\3\0\30\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\4\10\1\u016b\23\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\6\10\1\u016c\21\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\10\1\u016d\26\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\22\10\1\u016e\5\10\2\0\4\10\4\0"+
    "\1\10\7\0\3\10\7\0\14\10\1\0\2\10\1\0"+
    "\1\10\3\0\1\u0107\27\10\2\0\4\10\4\0\1\10"+
    "\7\0\3\10\36\0\1\u016f\1\0\1\u0170\2\0\1\u0171"+
    "\1\u0172\1\u0173\1\u0174\5\0\1\u0175\3\0\1\u0176\74\0"+
    "\1\u0177\112\0\1\u0178\111\0\1\u0178\46\0\3\u0179\1\70"+
    "\1\0\1\u0179\1\0\3\u0179\2\0\1\u0179\1\0\1\u0179"+
    "\3\0\1\u0179\1\0\1\u0179\1\0\1\u0179\2\0\1\u0179"+
    "\2\0\1\u0179\1\70\4\0\1\u0179\11\0\4\u0179\16\0"+
    "\1\u0179\11\0\1\u017a\1\0\1\u017a\1\70\3\0\1\u017a"+
    "\1\0\1\u017a\23\0\1\70\16\0\4\u017a\30\0\1\u017b"+
    "\1\0\1\u017b\6\0\1\u017b\130\0\1\u0125\53\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\20\10\1\u017c\7\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\20\10\1\u011e\7\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\3\10\1\u0156\24\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\4\10\1\u017d\23\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\23\10\1\u017e\4\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\1\10\1\147\26\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\11\10\1\u011d\16\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\15\10\1\u017f\12\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\5\10\1\u0180\22\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\2\10\1\u017f\25\10"+
    "\2\0\4\10\4\0\1\10\7\0\3\10\7\0\14\10"+
    "\1\0\2\10\1\0\1\10\3\0\1\225\27\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\37\0\1\u0181\14\0"+
    "\1\u0182\77\0\1\u0172\102\0\1\u0181\104\0\1\u0183\106\0"+
    "\1\u0184\13\0\1\u0185\77\0\1\u0147\7\0\1\u015d\74\0"+
    "\1\u0186\15\0\1\u015e\70\0\1\u0187\107\0\1\u0188\113\0"+
    "\1\u0189\61\0\3\u018a\1\70\1\0\1\u018a\1\0\3\u018a"+
    "\2\0\1\u018a\1\0\1\u018a\3\0\1\u018a\1\0\1\u018a"+
    "\1\0\1\u018a\2\0\1\u018a\2\0\1\u018a\1\70\4\0"+
    "\1\u018a\11\0\4\u018a\16\0\1\u018a\11\0\1\u018b\1\0"+
    "\1\u018b\1\70\3\0\1\u018b\1\0\1\u018b\23\0\1\70"+
    "\16\0\4\u018b\30\0\1\u018c\1\0\1\u018c\6\0\1\u018c"+
    "\74\0\4\10\1\u018d\7\10\1\0\2\10\1\0\1\10"+
    "\3\0\30\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\13\10"+
    "\1\222\14\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\4\10"+
    "\1\163\23\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\13\10"+
    "\1\u0130\14\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\7\0\14\10\1\0\2\10\1\0\1\10\3\0\11\10"+
    "\1\u018e\16\10\2\0\4\10\4\0\1\10\7\0\3\10"+
    "\41\0\1\53\110\0\1\53\102\0\1\u018f\124\0\1\u0190"+
    "\71\0\1\u0191\120\0\1\u0192\150\0\1\u0193\53\0\1\u0194"+
    "\75\0\1\u0195\60\0\3\u0196\1\70\1\0\1\u0196\1\0"+
    "\3\u0196\2\0\1\u0196\1\0\1\u0196\3\0\1\u0196\1\0"+
    "\1\u0196\1\0\1\u0196\2\0\1\u0196\2\0\1\u0196\1\70"+
    "\4\0\1\u0196\11\0\4\u0196\16\0\1\u0196\11\0\1\u0197"+
    "\1\0\1\u0197\1\70\3\0\1\u0197\1\0\1\u0197\23\0"+
    "\1\70\16\0\4\u0197\30\0\1\u0198\1\0\1\u0198\6\0"+
    "\1\u0198\74\0\14\10\1\0\2\10\1\0\1\10\3\0"+
    "\7\10\1\u0199\1\10\1\u011d\6\10\1\u0102\7\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\7\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\1\10\1\u019a\26\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\37\0\1\u019b\114\0"+
    "\1\u019c\104\0\1\u019d\3\0\1\u019e\75\0\1\u0184\113\0"+
    "\1\53\107\0\1\u0129\115\0\1\u019f\53\0\3\u01a0\1\70"+
    "\1\0\1\u01a0\1\0\3\u01a0\2\0\1\u01a0\1\0\1\u01a0"+
    "\3\0\1\u01a0\1\0\1\u01a0\1\0\1\u01a0\2\0\1\u01a0"+
    "\2\0\1\u01a0\1\70\4\0\1\u01a0\11\0\4\u01a0\16\0"+
    "\1\u01a0\11\0\1\u01a1\1\0\1\u01a1\1\70\3\0\1\u01a1"+
    "\1\0\1\u01a1\23\0\1\70\16\0\4\u01a1\30\0\1\u01a2"+
    "\1\0\1\u01a2\6\0\1\u01a2\74\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\14\10\1\u01a3\13\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\7\0\14\10\1\0\2\10"+
    "\1\0\1\10\3\0\10\10\1\214\17\10\2\0\4\10"+
    "\4\0\1\10\7\0\3\10\51\0\1\53\77\0\1\u01a4"+
    "\101\0\1\u01a5\107\0\1\u0181\107\0\1\u01a6\65\0\3\u01a7"+
    "\1\70\1\0\1\u01a7\1\0\3\u01a7\2\0\1\u01a7\1\0"+
    "\1\u01a7\3\0\1\u01a7\1\0\1\u01a7\1\0\1\u01a7\2\0"+
    "\1\u01a7\2\0\1\u01a7\1\70\4\0\1\u01a7\11\0\4\u01a7"+
    "\16\0\1\u01a7\11\0\1\u01a8\1\0\1\u01a8\1\70\3\0"+
    "\1\u01a8\1\0\1\u01a8\23\0\1\70\16\0\4\u01a8\30\0"+
    "\1\u01a9\1\0\1\u01a9\6\0\1\u01a9\74\0\14\10\1\0"+
    "\2\10\1\0\1\10\3\0\14\10\1\255\13\10\2\0"+
    "\4\10\4\0\1\10\7\0\3\10\33\0\1\u01aa\120\0"+
    "\1\u01ab\101\0\1\u0193\62\0\3\u01ac\1\70\1\0\1\u01ac"+
    "\1\0\3\u01ac\2\0\1\u01ac\1\0\1\u01ac\3\0\1\u01ac"+
    "\1\0\1\u01ac\1\0\1\u01ac\2\0\1\u01ac\2\0\1\u01ac"+
    "\1\70\4\0\1\u01ac\11\0\4\u01ac\16\0\1\u01ac\11\0"+
    "\1\u01ad\1\0\1\u01ad\1\70\3\0\1\u01ad\1\0\1\u01ad"+
    "\23\0\1\70\16\0\4\u01ad\30\0\1\u01ae\1\0\1\u01ae"+
    "\6\0\1\u01ae\133\0\1\u01af\75\0\1\u01b0\64\0\3\u01b1"+
    "\1\70\1\0\1\u01b1\1\0\3\u01b1\2\0\1\u01b1\1\0"+
    "\1\u01b1\3\0\1\u01b1\1\0\1\u01b1\1\0\1\u01b1\2\0"+
    "\1\u01b1\2\0\1\u01b1\1\70\4\0\1\u01b1\11\0\4\u01b1"+
    "\16\0\1\u01b1\11\0\1\u01b2\1\0\1\u01b2\1\70\3\0"+
    "\1\u01b2\1\0\1\u01b2\23\0\1\70\16\0\4\u01b2\30\0"+
    "\1\u01b3\1\0\1\u01b3\6\0\1\u01b3\131\0\1\u01b4\101\0"+
    "\1\53\62\0\3\u01b5\1\70\1\0\1\u01b5\1\0\3\u01b5"+
    "\2\0\1\u01b5\1\0\1\u01b5\3\0\1\u01b5\1\0\1\u01b5"+
    "\1\0\1\u01b5\2\0\1\u01b5\2\0\1\u01b5\1\70\4\0"+
    "\1\u01b5\11\0\4\u01b5\16\0\1\u01b5\11\0\1\u01b6\1\0"+
    "\1\u01b6\1\70\3\0\1\u01b6\1\0\1\u01b6\23\0\1\70"+
    "\16\0\4\u01b6\30\0\1\u01b7\1\0\1\u01b7\6\0\1\u01b7"+
    "\143\0\1\u0193\42\0\3\u01b8\1\70\1\0\1\u01b8\1\0"+
    "\3\u01b8\2\0\1\u01b8\1\0\1\u01b8\3\0\1\u01b8\1\0"+
    "\1\u01b8\1\0\1\u01b8\2\0\1\u01b8\2\0\1\u01b8\1\70"+
    "\4\0\1\u01b8\11\0\4\u01b8\16\0\1\u01b8\11\0\1\u01b9"+
    "\1\0\1\u01b9\1\70\3\0\1\u01b9\1\0\1\u01b9\23\0"+
    "\1\70\16\0\4\u01b9\30\0\1\u01ba\1\0\1\u01ba\6\0"+
    "\1\u01ba\76\0\3\u01bb\1\70\1\0\1\u01bb\1\0\3\u01bb"+
    "\2\0\1\u01bb\1\0\1\u01bb\3\0\1\u01bb\1\0\1\u01bb"+
    "\1\0\1\u01bb\2\0\1\u01bb\2\0\1\u01bb\1\70\4\0"+
    "\1\u01bb\11\0\4\u01bb\16\0\1\u01bb\11\0\1\u01bc\1\0"+
    "\1\u01bc\1\70\3\0\1\u01bc\1\0\1\u01bc\23\0\1\70"+
    "\16\0\4\u01bc\30\0\1\u01bd\1\0\1\u01bd\6\0\1\u01bd"+
    "\101\0\1\70\31\0\1\70\52\0\1\u01be\1\0\1\u01be"+
    "\1\70\3\0\1\u01be\1\0\1\u01be\23\0\1\70\16\0"+
    "\4\u01be\30\0\1\u01bf\1\0\1\u01bf\6\0\1\u01bf\76\0"+
    "\1\u01c0\1\0\1\u01c0\1\70\3\0\1\u01c0\1\0\1\u01c0"+
    "\23\0\1\70\16\0\4\u01c0\30\0\1\u01c1\1\0\1\u01c1"+
    "\6\0\1\u01c1\76\0\1\u01c2\1\0\1\u01c2\1\70\3\0"+
    "\1\u01c2\1\0\1\u01c2\23\0\1\70\16\0\4\u01c2\30\0"+
    "\1\u01c3\1\0\1\u01c3\6\0\1\u01c3\76\0\1\u01c4\1\0"+
    "\1\u01c4\1\70\3\0\1\u01c4\1\0\1\u01c4\23\0\1\70"+
    "\16\0\4\u01c4\30\0\1\u01c5\1\0\1\u01c5\6\0\1\u01c5"+
    "\76\0\1\u01bb\1\0\1\u01bb\1\70\3\0\1\u01bb\1\0"+
    "\1\u01bb\23\0\1\70\16\0\4\u01bb\30\0\1\u01c6\1\0"+
    "\1\u01c6\6\0\1\u01c6\76\0\1\u01c7\1\0\1\u01c7\6\0"+
    "\1\u01c7\76\0\1\u01c8\1\0\1\u01c8\6\0\1\u01c8\76\0"+
    "\1\u01c9\1\0\1\u01c9\6\0\1\u01c9\76\0\1\u01ca\1\0"+
    "\1\u01ca\6\0\1\u01ca\76\0\1\u01cb\1\0\1\u01cb\6\0"+
    "\1\u01cb\76\0\1\u01cc\1\0\1\u01cc\6\0\1\u01cc\76\0"+
    "\1\u01cd\1\0\1\u01cd\6\0\1\u01cd\76\0\1\u01ce\1\0"+
    "\1\u01ce\6\0\1\u01ce\76\0\1\u01cf\1\0\1\u01cf\6\0"+
    "\1\u01cf\76\0\1\u01d0\1\0\1\u01d0\6\0\1\u01d0\76\0"+
    "\1\u01d1\1\0\1\u01d1\6\0\1\u01d1\76\0\1\u01d2\1\0"+
    "\1\u01d2\6\0\1\u01d2\76\0\1\u01d3\1\0\1\u01d3\6\0"+
    "\1\u01d3\76\0\1\u01d4\1\0\1\u01d4\6\0\1\u01d4\76\0"+
    "\1\u01d5\1\0\1\u01d5\6\0\1\u01d5\76\0\1\u01d6\1\0"+
    "\1\u01d6\6\0\1\u01d6\76\0\1\u01d7\1\0\1\u01d7\6\0"+
    "\1\u01d7\76\0\1\u01d8\1\0\1\u01d8\6\0\1\u01d8\76\0"+
    "\1\u01d9\1\0\1\u01d9\6\0\1\u01d9\76\0\1\u01da\1\0"+
    "\1\u01da\6\0\1\u01da\76\0\1\u01db\1\0\1\u01db\6\0"+
    "\1\u01db\76\0\1\u01dc\1\0\1\u01dc\6\0\1\u01dc\76\0"+
    "\1\u01dd\1\0\1\u01dd\6\0\1\u01dd\76\0\1\u01de\1\0"+
    "\1\u01de\6\0\1\u01de\76\0\1\u01df\1\0\1\u01df\6\0"+
    "\1\u01df\76\0\1\u01e0\1\0\1\u01e0\6\0\1\u01e0\76\0"+
    "\1\u01e1\1\0\1\u01e1\6\0\1\u01e1\76\0\1\u01e2\1\0"+
    "\1\u01e2\6\0\1\u01e2\76\0\1\70\1\0\1\70\6\0"+
    "\1\70\70\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33408];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\1\1\1\11\11\1\1\11\23\1\1\11"+
    "\6\1\1\11\6\1\2\11\4\1\1\11\3\0\1\1"+
    "\1\0\3\1\1\11\75\1\2\11\7\1\1\0\77\1"+
    "\1\11\70\1\1\0\37\1\1\0\3\1\5\0\25\1"+
    "\3\0\3\1\3\0\23\1\4\0\3\1\1\0\14\1"+
    "\12\0\10\1\11\0\5\1\10\0\4\1\6\0\3\1"+
    "\4\0\2\1\3\0\2\1\3\0\2\1\2\0\2\1"+
    "\1\0\2\1\2\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\36\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[482];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public CommentlessOCamlLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public CommentlessOCamlLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public CommentlessOCamlLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1802) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 8: 
          { return token(TokenType.DELIMETER);
          }
        case 16: break;
        case 13: 
          { return token(TokenType.KEYWORD);
          }
        case 17: break;
        case 5: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 18: break;
        case 6: 
          { return token(TokenType.OPERATOR);
          }
        case 19: break;
        case 15: 
          { tokenLength += 2;
          }
        case 20: break;
        case 2: 
          { return token(TokenType.DEFAULT);
          }
        case 21: break;
        case 3: 
          { return token(TokenType.IDENTIFIER);
          }
        case 22: break;
        case 11: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 23: break;
        case 7: 
          { yybegin(STRING); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 24: break;
        case 12: 
          { return token(TokenType.TYPE);
          }
        case 25: break;
        case 10: 
          { yybegin(YYINITIAL);
          }
        case 26: break;
        case 4: 
          { return token(TokenType.NUMBER);
          }
        case 27: break;
        case 14: 
          { return token(TokenType.SPECIAL_VALUE);
          }
        case 28: break;
        case 9: 
          { tokenLength += yylength();
          }
        case 29: break;
        case 1: 
          { 
          }
        case 30: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
