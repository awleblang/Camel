/* The following code was generated by JFlex 1.4.3 on 4/25/12 5:13 PM */

package camel.syntaxhighlighter;
 

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 4/25/12 5:13 PM from the specification file
 * <tt>ocaml.flex</tt>
 */
public final class OCamlLexer extends JFlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\5\1\3\1\2\1\0\1\3\1\1\16\5\4\0\1\3\1\76"+
    "\1\24\1\0\1\4\1\0\1\67\1\25\1\57\1\60\1\65\1\23"+
    "\1\0\1\23\1\21\1\66\1\6\1\17\1\62\1\61\1\64\1\15"+
    "\1\63\1\15\2\7\1\100\1\106\1\73\1\74\1\75\1\0\1\77"+
    "\1\13\1\16\1\103\1\20\1\22\1\20\5\4\1\11\2\4\1\14"+
    "\3\4\1\101\4\4\1\12\2\4\1\104\1\26\1\105\1\77\1\10"+
    "\1\0\1\27\1\36\1\41\1\31\1\33\1\47\1\37\1\51\1\40"+
    "\1\55\1\102\1\42\1\54\1\30\1\43\1\46\1\71\1\34\1\32"+
    "\1\35\1\50\1\56\1\44\1\45\1\53\1\52\1\106\1\70\1\106"+
    "\1\72\41\5\2\0\4\4\4\0\1\4\2\0\1\5\7\0\1\4"+
    "\4\0\1\4\5\0\27\4\1\0\37\4\1\0\u013f\4\31\0\162\4"+
    "\4\0\14\4\16\0\5\4\11\0\1\4\21\0\130\5\5\0\23\5"+
    "\12\0\1\4\13\0\1\4\1\0\3\4\1\0\1\4\1\0\24\4"+
    "\1\0\54\4\1\0\46\4\1\0\5\4\4\0\202\4\1\0\4\5"+
    "\3\0\105\4\1\0\46\4\2\0\2\4\6\0\20\4\41\0\46\4"+
    "\2\0\1\4\7\0\47\4\11\0\21\5\1\0\27\5\1\0\3\5"+
    "\1\0\1\5\1\0\2\5\1\0\1\5\13\0\33\4\5\0\3\4"+
    "\15\0\4\5\14\0\6\5\13\0\32\4\5\0\13\4\16\5\7\0"+
    "\12\5\4\0\2\4\1\5\143\4\1\0\1\4\10\5\1\0\6\5"+
    "\2\4\2\5\1\0\4\5\2\4\12\5\3\4\2\0\1\4\17\0"+
    "\1\5\1\4\1\5\36\4\33\5\2\0\3\4\60\0\46\4\13\5"+
    "\1\4\u014f\0\3\5\66\4\2\0\1\5\1\4\20\5\2\0\1\4"+
    "\4\5\3\0\12\4\2\5\2\0\12\5\21\0\3\5\1\0\10\4"+
    "\2\0\2\4\2\0\26\4\1\0\7\4\1\0\1\4\3\0\4\4"+
    "\2\0\1\5\1\4\7\5\2\0\2\5\2\0\3\5\11\0\1\5"+
    "\4\0\2\4\1\0\3\4\2\5\2\0\12\5\4\4\15\0\3\5"+
    "\1\0\6\4\4\0\2\4\2\0\26\4\1\0\7\4\1\0\2\4"+
    "\1\0\2\4\1\0\2\4\2\0\1\5\1\0\5\5\4\0\2\5"+
    "\2\0\3\5\13\0\4\4\1\0\1\4\7\0\14\5\3\4\14\0"+
    "\3\5\1\0\11\4\1\0\3\4\1\0\26\4\1\0\7\4\1\0"+
    "\2\4\1\0\5\4\2\0\1\5\1\4\10\5\1\0\3\5\1\0"+
    "\3\5\2\0\1\4\17\0\2\4\2\5\2\0\12\5\1\0\1\4"+
    "\17\0\3\5\1\0\10\4\2\0\2\4\2\0\26\4\1\0\7\4"+
    "\1\0\2\4\1\0\5\4\2\0\1\5\1\4\6\5\3\0\2\5"+
    "\2\0\3\5\10\0\2\5\4\0\2\4\1\0\3\4\4\0\12\5"+
    "\1\0\1\4\20\0\1\5\1\4\1\0\6\4\3\0\3\4\1\0"+
    "\4\4\3\0\2\4\1\0\1\4\1\0\2\4\3\0\2\4\3\0"+
    "\3\4\3\0\10\4\1\0\3\4\4\0\5\5\3\0\3\5\1\0"+
    "\4\5\11\0\1\5\17\0\11\5\11\0\1\4\7\0\3\5\1\0"+
    "\10\4\1\0\3\4\1\0\27\4\1\0\12\4\1\0\5\4\4\0"+
    "\7\5\1\0\3\5\1\0\4\5\7\0\2\5\11\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0"+
    "\12\4\1\0\5\4\2\0\1\5\1\4\7\5\1\0\3\5\1\0"+
    "\4\5\7\0\2\5\7\0\1\4\1\0\2\4\4\0\12\5\22\0"+
    "\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0\20\4\4\0"+
    "\6\5\2\0\3\5\1\0\4\5\11\0\1\5\10\0\2\4\4\0"+
    "\12\5\22\0\2\5\1\0\22\4\3\0\30\4\1\0\11\4\1\0"+
    "\1\4\2\0\7\4\3\0\1\5\4\0\6\5\1\0\1\5\1\0"+
    "\10\5\22\0\2\5\15\0\60\4\1\5\2\4\7\5\4\0\10\4"+
    "\10\5\1\0\12\5\47\0\2\4\1\0\1\4\2\0\2\4\1\0"+
    "\1\4\2\0\1\4\6\0\4\4\1\0\7\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\4\2\0\2\4\1\0\4\4\1\5\2\4\6\5"+
    "\1\0\2\5\1\4\2\0\5\4\1\0\1\4\1\0\6\5\2\0"+
    "\12\5\2\0\2\4\42\0\1\4\27\0\2\5\6\0\12\5\13\0"+
    "\1\5\1\0\1\5\1\0\1\5\4\0\2\5\10\4\1\0\42\4"+
    "\6\0\24\5\1\0\2\5\4\4\4\0\10\5\1\0\44\5\11\0"+
    "\1\5\71\0\42\4\1\0\5\4\1\0\2\4\1\0\7\5\3\0"+
    "\4\5\6\0\12\5\6\0\6\4\4\5\106\0\46\4\12\0\51\4"+
    "\7\0\132\4\5\0\104\4\5\0\122\4\6\0\7\4\1\0\77\4"+
    "\1\0\1\4\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4"+
    "\2\0\47\4\1\0\1\4\1\0\4\4\2\0\37\4\1\0\1\4"+
    "\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4\2\0\7\4"+
    "\1\0\7\4\1\0\27\4\1\0\37\4\1\0\1\4\1\0\4\4"+
    "\2\0\7\4\1\0\47\4\1\0\23\4\16\0\11\5\56\0\125\4"+
    "\14\0\u026c\4\2\0\10\4\12\0\32\4\5\0\113\4\3\0\3\4"+
    "\17\0\15\4\1\0\4\4\3\5\13\0\22\4\3\5\13\0\22\4"+
    "\2\5\14\0\15\4\1\0\3\4\1\0\2\5\14\0\64\4\40\5"+
    "\3\0\1\4\3\0\2\4\1\5\2\0\12\5\41\0\3\5\2\0"+
    "\12\5\6\0\130\4\10\0\51\4\1\5\126\0\35\4\3\0\14\5"+
    "\4\0\14\5\12\0\12\5\36\4\2\0\5\4\u038b\0\154\4\224\0"+
    "\234\4\4\0\132\4\6\0\26\4\2\0\6\4\2\0\46\4\2\0"+
    "\6\4\2\0\10\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\37\4\2\0\65\4\1\0\7\4\1\0\1\4\3\0\3\4\1\0"+
    "\7\4\3\0\4\4\2\0\6\4\4\0\15\4\5\0\3\4\1\0"+
    "\7\4\17\0\4\5\32\0\5\5\20\0\2\4\23\0\1\4\13\0"+
    "\4\5\6\0\6\5\1\0\1\4\15\0\1\4\40\0\22\4\36\0"+
    "\15\5\4\0\1\5\3\0\6\5\27\0\1\4\4\0\1\4\2\0"+
    "\12\4\1\0\1\4\3\0\5\4\6\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\4\4\1\0\3\4\1\0\7\4\3\0\3\4\5\0"+
    "\5\4\26\0\44\4\u0e81\0\3\4\31\0\11\4\6\5\1\0\5\4"+
    "\2\0\5\4\4\0\126\4\2\0\2\5\2\0\3\4\1\0\137\4"+
    "\5\0\50\4\4\0\136\4\21\0\30\4\70\0\20\4\u0200\0\u19b6\4"+
    "\112\0\u51a6\4\132\0\u048d\4\u0773\0\u2ba4\4\u215c\0\u012e\4\2\0\73\4"+
    "\225\0\7\4\14\0\5\4\5\0\1\4\1\5\12\4\1\0\15\4"+
    "\1\0\5\4\1\0\1\4\1\0\2\4\1\0\2\4\1\0\154\4"+
    "\41\0\u016b\4\22\0\100\4\2\0\66\4\50\0\15\4\3\0\20\5"+
    "\20\0\4\5\17\0\2\4\30\0\3\4\31\0\1\4\6\0\5\4"+
    "\1\0\207\4\2\0\1\5\4\0\1\4\13\0\12\5\7\0\32\4"+
    "\4\0\1\4\1\0\32\4\12\0\132\4\3\0\6\4\2\0\6\4"+
    "\2\0\6\4\2\0\3\4\3\0\2\4\3\0\2\4\22\0\3\5"+
    "\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\3\1\1\2\3\3\1\2\1\1\1\4\1\5"+
    "\1\6\22\2\2\7\1\4\3\1\3\4\1\7\2\2"+
    "\1\7\1\10\2\11\1\12\1\1\1\10\1\1\2\3"+
    "\3\0\1\3\1\0\1\3\3\2\1\13\10\2\1\13"+
    "\13\2\1\13\4\2\1\13\37\2\1\14\2\2\1\15"+
    "\1\16\2\10\5\3\1\0\1\3\2\2\1\4\3\2"+
    "\1\4\1\2\1\15\7\2\1\4\1\14\2\2\1\4"+
    "\10\2\1\14\15\2\1\4\11\2\1\13\1\2\1\4"+
    "\1\2\1\4\4\2\1\10\3\3\3\2\1\4\20\2"+
    "\1\14\14\2\1\14\1\13\17\2\3\3\1\0\23\2"+
    "\1\13\13\2\1\0\3\3\5\0\3\2\1\14\21\2"+
    "\3\0\3\3\3\0\23\2\4\0\3\3\1\0\14\2"+
    "\12\0\3\3\5\2\11\0\3\3\2\2\10\0\2\3"+
    "\2\2\6\0\2\3\1\2\4\0\2\3\3\0\2\3"+
    "\3\0\2\3\2\0\2\3\1\0\2\3\2\0\1\3"+
    "\1\0\1\3\1\0\1\3\1\0\1\3\1\0\36\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\107\0\216\0\325\0\u011c\0\u0163\0\u01aa\0\u01f1"+
    "\0\u0238\0\u027f\0\u02c6\0\u030d\0\u0354\0\325\0\325\0\u039b"+
    "\0\u03e2\0\u0429\0\u0470\0\u04b7\0\u04fe\0\u0545\0\u058c\0\u05d3"+
    "\0\u061a\0\u0661\0\u06a8\0\u06ef\0\u0736\0\u077d\0\u07c4\0\u080b"+
    "\0\u0852\0\u0899\0\325\0\u08e0\0\u0927\0\u096e\0\u09b5\0\u09fc"+
    "\0\u0a43\0\325\0\u0a8a\0\u0ad1\0\u0b18\0\u0b5f\0\u0ba6\0\u0bed"+
    "\0\325\0\325\0\u0c34\0\u0c7b\0\u0cc2\0\u0d09\0\325\0\u0d50"+
    "\0\u0d97\0\u0dde\0\u0e25\0\u0e6c\0\u01aa\0\u0eb3\0\u0efa\0\u0f41"+
    "\0\u0f88\0\u0fcf\0\u1016\0\u105d\0\u10a4\0\u10eb\0\u1132\0\u1179"+
    "\0\u11c0\0\u1207\0\u124e\0\u1295\0\u12dc\0\u1323\0\u136a\0\u13b1"+
    "\0\u13f8\0\u143f\0\u1486\0\u14cd\0\u1514\0\u01aa\0\u155b\0\u15a2"+
    "\0\u15e9\0\u1630\0\u1677\0\u16be\0\u1705\0\u174c\0\u1793\0\u17da"+
    "\0\u1821\0\u1868\0\u18af\0\u18f6\0\u193d\0\u1984\0\u19cb\0\u1a12"+
    "\0\u1a59\0\u1aa0\0\u1ae7\0\u1b2e\0\u1b75\0\u1bbc\0\u1c03\0\u1c4a"+
    "\0\u1c91\0\u1cd8\0\u1d1f\0\u1d66\0\u1dad\0\u1df4\0\u1e3b\0\u1e82"+
    "\0\u1ec9\0\u1f10\0\325\0\u1f57\0\u1f9e\0\325\0\325\0\u1fe5"+
    "\0\u202c\0\u2073\0\u20ba\0\u2101\0\u2148\0\u218f\0\u21d6\0\u221d"+
    "\0\u2264\0\u22ab\0\u01aa\0\u22f2\0\u2339\0\u2380\0\u23c7\0\u240e"+
    "\0\u01aa\0\u2455\0\u249c\0\u24e3\0\u252a\0\u2571\0\u25b8\0\u25ff"+
    "\0\u2646\0\u01aa\0\u268d\0\u26d4\0\u271b\0\u2762\0\u27a9\0\u27f0"+
    "\0\u2837\0\u287e\0\u28c5\0\u290c\0\u2953\0\u299a\0\u29e1\0\u2a28"+
    "\0\u2a6f\0\u2ab6\0\u2afd\0\u2b44\0\u2b8b\0\u2bd2\0\u2c19\0\u2c60"+
    "\0\u2ca7\0\u2cee\0\u2d35\0\u2d7c\0\u2dc3\0\u2e0a\0\u2e51\0\u2e98"+
    "\0\u2edf\0\u2f26\0\u2f6d\0\u2fb4\0\u2ffb\0\u3042\0\u3089\0\u30d0"+
    "\0\u3117\0\u315e\0\u31a5\0\u31ec\0\u3233\0\u327a\0\325\0\u32c1"+
    "\0\u3308\0\u334f\0\u3396\0\u33dd\0\u3424\0\u346b\0\u34b2\0\u34f9"+
    "\0\u3540\0\u3587\0\u35ce\0\u3615\0\u365c\0\u36a3\0\u36ea\0\u3731"+
    "\0\u3778\0\u37bf\0\u3806\0\u384d\0\u3894\0\u38db\0\u3922\0\u3969"+
    "\0\u39b0\0\u39f7\0\u3a3e\0\u3a85\0\u3acc\0\u3b13\0\u3b5a\0\u3ba1"+
    "\0\u3be8\0\u3c2f\0\u3c76\0\u3cbd\0\u3d04\0\u3d4b\0\u3d92\0\u3dd9"+
    "\0\u3e20\0\u3e67\0\u3eae\0\u3ef5\0\u3f3c\0\u3f83\0\u3fca\0\u4011"+
    "\0\u4058\0\u409f\0\u40e6\0\u412d\0\u4174\0\u41bb\0\u4202\0\u4249"+
    "\0\u4290\0\u42d7\0\u431e\0\u4365\0\u43ac\0\u43f3\0\u443a\0\u4481"+
    "\0\u44c8\0\u450f\0\u4556\0\u459d\0\u45e4\0\u462b\0\u4672\0\u46b9"+
    "\0\u4700\0\u4747\0\u478e\0\u47d5\0\u481c\0\u4863\0\u48aa\0\u48f1"+
    "\0\u4938\0\u497f\0\u49c6\0\u4a0d\0\u4a54\0\u4a9b\0\u4ae2\0\u4b29"+
    "\0\u4b70\0\u4bb7\0\u4bfe\0\u4c45\0\u4c8c\0\u4cd3\0\u4d1a\0\u4d61"+
    "\0\u4da8\0\u4def\0\u4e36\0\u4e7d\0\u4ec4\0\u4f0b\0\u4f52\0\u4f99"+
    "\0\u4fe0\0\u5027\0\u506e\0\u50b5\0\u50fc\0\u5143\0\u518a\0\u51d1"+
    "\0\u5218\0\u525f\0\u52a6\0\u52ed\0\u5334\0\u537b\0\u53c2\0\u5409"+
    "\0\u5450\0\u5497\0\u54de\0\u5525\0\u556c\0\u55b3\0\u55fa\0\u5641"+
    "\0\u5688\0\u56cf\0\u5716\0\u575d\0\u57a4\0\u57eb\0\u5832\0\u5879"+
    "\0\u58c0\0\u5907\0\u594e\0\u5995\0\u59dc\0\u5a23\0\u5a6a\0\u2646"+
    "\0\u5ab1\0\u5af8\0\u5b3f\0\u5b86\0\u5bcd\0\u5c14\0\u5c5b\0\u5ca2"+
    "\0\u5ce9\0\u5d30\0\u5d77\0\u5dbe\0\u5e05\0\u5e4c\0\u23c7\0\u5e93"+
    "\0\u5eda\0\u5f21\0\u5f68\0\u5faf\0\u5ff6\0\u603d\0\u6084\0\u60cb"+
    "\0\u6112\0\u6159\0\u61a0\0\u61e7\0\u622e\0\u6275\0\u62bc\0\u6303"+
    "\0\u634a\0\u6391\0\u63d8\0\u641f\0\u6466\0\u64ad\0\u64f4\0\u653b"+
    "\0\u6582\0\u65c9\0\u6610\0\u6657\0\u669e\0\u66e5\0\u672c\0\u6773"+
    "\0\u67ba\0\u6801\0\u6848\0\u688f\0\u68d6\0\u691d\0\u6964\0\u69ab"+
    "\0\u69f2\0\u6a39\0\u6a80\0\u6ac7\0\u6b0e\0\u6b55\0\u6b9c\0\u6be3"+
    "\0\u6c2a\0\u6c71\0\u6cb8\0\u6cff\0\u6d46\0\u6d8d\0\u6dd4\0\u6e1b"+
    "\0\u6e62\0\u6ea9\0\u6ef0\0\u6f37\0\u6f7e\0\u6fc5\0\u700c\0\u7053"+
    "\0\u709a\0\u70e1\0\u7128\0\u716f\0\u71b6\0\u71fd\0\u7244\0\u728b"+
    "\0\u72d2\0\u7319\0\u7360\0\u73a7\0\u73ee\0\u7435\0\u747c\0\u74c3"+
    "\0\u750a\0\u7551\0\u7598\0\u75df\0\u7626\0\u766d\0\u76b4\0\u76fb"+
    "\0\u7742\0\u7789\0\u77d0\0\u7817\0\u785e\0\u78a5\0\u78ec\0\u7933"+
    "\0\u797a\0\u79c1\0\u7a08\0\u7a4f\0\u7a96\0\u7add\0\u7b24\0\u7b6b"+
    "\0\u7bb2\0\u7bf9\0\u7c40\0\u7c87\0\u7cce\0\u7d15\0\u7d5c\0\u7da3"+
    "\0\u7dea\0\u7e31\0\u7e78\0\u7ebf\0\u7f06\0\u7f4d\0\u7f94\0\u7fdb"+
    "\0\u8022";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\1\5\1\4\1\6\1\7\1\4\1\10\1\11"+
    "\1\12\1\13\3\7\1\11\1\7\1\11\1\7\1\14"+
    "\1\7\1\15\1\16\1\17\1\4\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\7\1\30\1\31"+
    "\1\32\1\33\1\34\1\7\1\35\1\36\1\37\3\7"+
    "\1\40\1\7\1\41\1\42\1\43\4\11\1\44\1\15"+
    "\1\45\1\46\1\7\1\47\1\50\3\51\1\52\1\53"+
    "\1\54\1\7\1\55\1\56\2\43\1\57\1\60\1\61"+
    "\21\57\1\62\1\57\1\63\60\57\1\64\1\60\1\61"+
    "\22\64\1\62\1\65\60\64\111\0\1\4\107\0\1\6"+
    "\107\0\15\7\1\0\1\7\4\0\30\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\11\0\3\66\1\67\1\70"+
    "\1\0\1\71\1\66\1\72\1\66\1\67\1\73\1\74"+
    "\6\0\1\67\1\0\1\74\2\0\1\72\3\0\1\67"+
    "\1\71\1\0\1\70\1\0\1\67\11\0\4\66\30\0"+
    "\3\11\1\67\3\0\1\11\1\0\1\11\1\67\1\73"+
    "\1\74\6\0\1\67\1\0\1\74\6\0\1\67\4\0"+
    "\1\67\11\0\4\11\26\0\2\7\3\12\4\7\1\12"+
    "\1\7\1\12\1\75\1\73\1\76\4\0\2\7\1\75"+
    "\1\7\1\76\13\7\1\75\7\7\2\0\4\12\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\11\7\1\77\16\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\11\0\3\73\4\0\1\73\1\0\1\73\41\0"+
    "\4\73\43\0\1\52\71\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\100\1\7\1\101\1\7\1\102\1\103\1\104"+
    "\2\7\1\105\15\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\106\3\7"+
    "\1\107\7\7\1\110\13\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\4\7"+
    "\1\111\7\7\1\112\13\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\7"+
    "\1\113\4\7\1\114\2\7\1\115\16\7\2\0\4\7"+
    "\4\0\1\116\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\1\7\1\100\11\7\1\117\2\7\1\120\1\121"+
    "\10\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\122\3\7\1\123\23\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\124\4\7\1\125\6\7\1\126"+
    "\5\7\1\127\1\7\1\130\3\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\4\7\1\131\7\7\1\132\13\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\133\6\7\1\134\7\7\1\126\7\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\4\7\1\135\6\7\1\136\1\137\5\7"+
    "\1\140\5\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\141\1\142\1\143"+
    "\1\144\1\145\4\7\1\146\2\7\1\147\1\7\1\150"+
    "\11\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\5\7\1\126\1\7\1\151"+
    "\7\7\1\152\1\126\1\153\6\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\11\7\1\154\10\7\1\155\5\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\5\7\1\156\22\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\157\2\7"+
    "\1\110\1\7\1\143\5\7\1\160\1\161\4\7\1\162"+
    "\6\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\7\1\163\26\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\164\3\7\1\165\4\7\1\166\2\7"+
    "\1\167\4\7\1\170\6\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\171"+
    "\10\7\1\172\16\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\63\0\1\173\47\0\1\52\43\0\1\52\110\0"+
    "\1\52\107\0\1\52\41\0\1\15\157\0\2\52\105\0"+
    "\1\52\106\0\1\52\3\0\1\52\12\0\15\7\1\0"+
    "\1\7\4\0\6\7\1\174\21\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\22\7\1\175\5\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\110\0\1\176\1\0\1\57\2\0\21\57\1\0"+
    "\1\57\1\0\60\57\2\0\1\61\104\0\2\177\1\0"+
    "\3\177\1\200\1\177\1\201\4\177\1\201\1\177\1\200"+
    "\41\177\2\200\2\201\22\177\1\64\2\0\22\64\2\0"+
    "\60\64\2\177\1\0\104\177\6\0\3\66\4\0\1\66"+
    "\1\0\1\66\1\67\1\73\1\74\6\0\1\67\1\0"+
    "\1\74\13\0\1\67\11\0\4\66\30\0\1\202\2\203"+
    "\2\0\1\203\1\0\4\203\1\0\1\203\4\0\1\203"+
    "\1\0\1\203\1\0\1\203\2\0\1\203\2\0\1\203"+
    "\5\0\1\203\11\0\4\203\16\0\1\203\11\0\1\204"+
    "\1\0\1\204\4\0\1\204\1\0\1\204\41\0\4\204"+
    "\30\0\1\205\1\0\1\205\6\0\1\205\75\0\3\73"+
    "\4\0\1\73\1\0\1\73\1\67\1\0\1\74\6\0"+
    "\1\67\1\0\1\74\13\0\1\67\11\0\4\73\30\0"+
    "\3\206\4\0\1\206\1\0\1\206\3\0\1\207\35\0"+
    "\4\206\26\0\2\7\3\210\4\7\1\210\1\7\1\210"+
    "\1\7\1\0\1\7\1\207\3\0\30\7\2\0\4\210"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\3\7\1\211\24\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\2\7"+
    "\1\126\25\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\3\7\1\212\1\7"+
    "\1\213\3\7\1\214\16\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\5\7"+
    "\1\215\22\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\216\27\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\3\7\1\217\24\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\14\7\1\220\13\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\221"+
    "\4\7\1\222\21\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\10\7\1\223"+
    "\4\7\1\126\12\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\6\7\1\213"+
    "\21\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\12\7\1\224\15\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\7\1\225\13\7\1\226\12\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\2\7\1\213\25\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\2\7\1\227\2\7\1\230\22\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\231\6\7\1\126\17\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\5\7\1\110\22\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\3\7\1\225"+
    "\24\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\7\1\232\4\7\1\233"+
    "\2\7\1\110\1\234\4\7\1\235\10\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\3\7\1\236\24\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\11\7"+
    "\1\237\16\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\240\11\7\1\126"+
    "\5\7\1\213\7\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\231"+
    "\26\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\21\7\1\241\2\7\1\126"+
    "\3\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\4\7\1\242\23\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\17\7\1\225\10\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\10\7\1\243\17\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\14\7\1\244"+
    "\13\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\4\7\1\245\10\7\1\0\1\7\4\0\6\7\1\246"+
    "\2\7\1\247\1\250\5\7\1\251\1\7\1\252\5\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\7\1\253\26\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\11\7\1\254\16\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\255"+
    "\27\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\7\1\256\1\7\1\231"+
    "\21\7\1\257\2\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\260\27\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\7\1\113\21\7\1\261\4\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\14\7\1\110\13\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\4\7\1\262\23\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\5\7"+
    "\1\213\5\7\1\213\14\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\126\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\3\7\1\263\24\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\5\7\1\213\2\7\1\264\17\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\14\7\1\224\13\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\26\7\1\265\1\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\4\7"+
    "\1\242\1\7\1\266\21\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\267\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\6\7\1\270\21\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\4\7\1\242\4\7\1\271\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\4\7\1\272\4\7\1\273\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\274\1\7\1\117\14\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\14\7\1\275\13\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\5\7\1\126\22\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\7"+
    "\1\276\26\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\11\7\1\263\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\6\7\1\277\7\7\1\300\11\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\6\7\1\301\21\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\1\7\1\300\26\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\2\7"+
    "\1\302\25\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\6\7\1\303\21\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\13\7\1\126\14\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\5\7\1\304\22\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\5\7"+
    "\1\305\22\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\306\27\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\11\0\1\201\1\0"+
    "\1\201\4\0\1\201\1\0\1\201\41\0\4\201\30\0"+
    "\1\307\1\0\1\307\4\0\1\307\1\0\1\307\41\0"+
    "\4\307\30\0\1\202\2\203\1\67\1\0\1\203\1\0"+
    "\4\203\1\0\1\203\4\0\1\203\1\0\1\203\1\0"+
    "\1\203\2\0\1\203\2\0\1\203\1\67\4\0\1\203"+
    "\11\0\4\203\16\0\1\203\11\0\3\310\1\67\1\0"+
    "\1\310\1\0\4\310\1\0\1\310\4\0\1\310\1\0"+
    "\1\310\1\0\1\310\2\0\1\310\2\0\1\310\1\67"+
    "\4\0\1\310\11\0\4\310\16\0\1\310\11\0\1\311"+
    "\1\0\1\311\1\67\3\0\1\311\1\0\1\311\22\0"+
    "\1\67\16\0\4\311\30\0\1\312\1\0\1\312\6\0"+
    "\1\312\75\0\3\206\4\0\1\206\1\0\1\206\1\67"+
    "\10\0\1\67\15\0\1\67\11\0\4\206\30\0\3\206"+
    "\4\0\1\206\1\0\1\206\41\0\4\206\26\0\2\7"+
    "\3\210\4\7\1\210\1\7\1\210\1\75\1\0\1\7"+
    "\4\0\2\7\1\75\15\7\1\75\7\7\2\0\4\210"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\6\7\1\313\21\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\4\7"+
    "\1\314\23\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\7\1\213\26\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\315\27\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\316\26\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\4\7\1\317\10\7\1\0\1\7\4\0"+
    "\30\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\3\7\1\213\24\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\320\16\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\4\7\1\321\10\7\1\0"+
    "\1\7\4\0\30\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\5\7\1\213"+
    "\22\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\4\7\1\126\23\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\7\1\322\26\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\4\7\1\323\4\7\1\324\2\7\1\325\13\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\326\7\7\1\327\6\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\22\7\1\213\5\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\4\7\1\330\23\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\4\7\1\331"+
    "\23\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\25\7\1\332\2\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\333\16\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\3\7\1\334\24\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\2\7\1\335"+
    "\25\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\7\1\336\2\7\1\126"+
    "\23\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\7\1\126\26\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\242\16\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\13\7\1\337\14\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\12\7\1\340"+
    "\15\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\4\7\1\341\10\7\1\0\1\7\4\0\30\7\2\0"+
    "\1\342\1\7\1\343\1\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\6\7\1\344\21\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\5\7\1\213\5\7\1\345\14\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\346\16\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\4\7\1\347\23\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\14\7"+
    "\1\350\13\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\13\7\1\213\14\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\3\7\1\351\24\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\3\7\1\352\24\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\17\7"+
    "\1\353\10\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\5\7\1\354\22\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\24\7\1\355\3\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\16\7\1\356\11\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\232\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\13\7\1\357\1\7\1\0\1\7\4\0\30\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\4\7\1\327\23\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\11\7\1\360\16\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\4\7\1\245\10\7\1\0\1\7"+
    "\4\0\30\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\22\7\1\126\5\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\13\7\1\225\14\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\5\7\1\361\22\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\7"+
    "\1\362\25\7\1\363\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\13\7\1\364"+
    "\14\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\365\13\7\1\224\13\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\12\7\1\366\15\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\12\7\1\270\15\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\4\7\1\367\10\7\1\0\1\7"+
    "\4\0\30\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\22\7\1\370\5\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\4\7"+
    "\1\317\10\7\1\0\1\7\4\0\20\7\1\213\1\271"+
    "\6\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\371\27\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\6\7\1\372\21\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\11\7"+
    "\1\373\16\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\5\7\1\374\22\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\11\0\3\375"+
    "\1\67\1\0\1\375\1\0\4\375\1\0\1\375\4\0"+
    "\1\375\1\0\1\375\1\0\1\375\2\0\1\375\2\0"+
    "\1\375\1\67\4\0\1\375\11\0\4\375\16\0\1\375"+
    "\11\0\1\376\1\0\1\376\1\67\3\0\1\376\1\0"+
    "\1\376\22\0\1\67\16\0\4\376\30\0\1\377\1\0"+
    "\1\377\6\0\1\377\73\0\15\7\1\u0100\1\7\4\0"+
    "\30\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\5\7\1\145\22\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\24\7\1\232\3\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\30\7\2\0\1\7\1\213\2\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\20\7\1\u0101"+
    "\7\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\27\7\1\u0102\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\11\7\1\u0103\16\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\u0104\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\5\7\1\u0105\22\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\7\1\221\26\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\21\7\1\u0106\6\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\7"+
    "\1\u0107\26\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\12\7\1\145\15\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\5\7\1\u0108\22\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\17\7\1\u0109\10\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\13\7\1\213\1\7\1\0\1\7"+
    "\4\0\30\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\13\7\1\u010a\14\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\4\7\1\213\23\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\4\7\1\u010b\10\7"+
    "\1\0\1\7\4\0\30\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\12\7"+
    "\1\u010c\15\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\4\7\1\u010d\10\7\1\0\1\7\4\0\30\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\22\7\1\u010e\5\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\14\7\1\u010f\13\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\30\7"+
    "\2\0\1\7\1\232\2\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\30\7\2\0\3\7"+
    "\1\232\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\u0110\16\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\21\7\1\u0111\6\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\u0112"+
    "\26\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\5\7\1\u0113\22\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\5\7\1\334\22\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\3\7\1\u0114\24\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\6\7\1\u0115"+
    "\21\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\350\27\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\4\7\1\u0116\10\7"+
    "\1\0\1\7\4\0\30\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\4\7\1\263\10\7\1\0\1\7"+
    "\4\0\30\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\17\7\1\213\10\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\2\7"+
    "\1\213\12\7\1\0\1\7\4\0\17\7\1\213\10\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\14\7\1\u0117\13\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\5\7\1\u0118\22\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\u0118\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\u0119\27\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\15\7\1\u011a\12\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\6\7\1\337\21\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\6\7\1\u011b"+
    "\21\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\11\7\1\u011c\6\7\1\u011d"+
    "\7\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\14\7\1\100\13\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\7\7\1\271\20\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\21\7\1\u011e\6\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\u011f"+
    "\26\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\u0120\1\7\4\0\30\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\11\0\3\u0121\1\67\1\0\1\u0121"+
    "\1\0\4\u0121\1\0\1\u0121\4\0\1\u0121\1\0\1\u0121"+
    "\1\0\1\u0121\2\0\1\u0121\2\0\1\u0121\1\67\4\0"+
    "\1\u0121\11\0\4\u0121\16\0\1\u0121\11\0\1\u0122\1\0"+
    "\1\u0122\1\67\3\0\1\u0122\1\0\1\u0122\22\0\1\67"+
    "\16\0\4\u0122\30\0\1\u0123\1\0\1\u0123\6\0\1\u0123"+
    "\117\0\1\u0124\3\0\1\u0125\1\u0126\4\0\1\u0127\6\0"+
    "\1\u0128\41\0\15\7\1\0\1\7\4\0\13\7\1\u0129"+
    "\14\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\4\7\1\u012a\23\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\7\1\u012b\26\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\14\7\1\126\13\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\5\7\1\221"+
    "\22\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\6\7\1\221\21\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\10\7\1\u012c\17\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\u011e\26\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\6\7\1\u012d"+
    "\21\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\14\7\1\u012e\13\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\11\7\1\u011c\1\7\1\u012f\4\7\1\u0101"+
    "\7\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\1\u0130\27\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\14\7\1\u0131\13\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\u0132"+
    "\27\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\20\7\1\u0133\7\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\u0134\27\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\2\7"+
    "\1\225\25\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\11\7\1\u0135\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\145\16\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\11\7\1\u0136\16\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\5\7"+
    "\1\u0137\22\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\14\7\1\u0138\13\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\7\1\232\26\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\4\7\1\u0139\10\7"+
    "\1\0\1\7\4\0\30\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\225\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\11\7\1\u013a\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\u013b\2\7\1\161\13\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\7\1\110\26\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\13\7\1\u013c\14\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\171"+
    "\27\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\10\7\1\u013d\17\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\36\0\1\u013e\6\0"+
    "\1\u013f\5\0\1\u0140\44\0\3\u0141\1\67\1\0\1\u0141"+
    "\1\0\4\u0141\1\0\1\u0141\4\0\1\u0141\1\0\1\u0141"+
    "\1\0\1\u0141\2\0\1\u0141\2\0\1\u0141\1\67\4\0"+
    "\1\u0141\11\0\4\u0141\16\0\1\u0141\11\0\1\u0142\1\0"+
    "\1\u0142\1\67\3\0\1\u0142\1\0\1\u0142\22\0\1\67"+
    "\16\0\4\u0142\30\0\1\u0143\1\0\1\u0143\6\0\1\u0143"+
    "\124\0\1\u0144\104\0\1\u0145\115\0\1\52\77\0\1\u0146"+
    "\104\0\1\52\61\0\15\7\1\0\1\7\4\0\14\7"+
    "\1\u0147\13\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\11\7\1\u0148\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\20\7\1\251\7\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\4\7\1\u0149\10\7"+
    "\1\0\1\7\4\0\30\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\11\7"+
    "\1\u013b\16\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\7\1\u014a\26\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\u014b\16\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\6\7\1\334\21\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\20\7"+
    "\1\u014c\7\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\7\1\u014d\26\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\4\7"+
    "\1\u014e\10\7\1\0\1\7\4\0\30\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\13\7\1\u014f\14\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\6\7"+
    "\1\u0150\21\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\20\7\1\u0151\7\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\1\u0152\27\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\20\7\1\u0153\7\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\u0154"+
    "\1\7\1\u0155\1\u0156\4\7\1\u011c\1\u0157\5\7\1\u0101"+
    "\7\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\6\7\1\u0158\21\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\14\7\1\242\13\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\14\7\1\u0159\13\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\u015a\1\7\4\0\30\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\35\0\1\u015b\117\0"+
    "\1\u015c\111\0\1\u015d\46\0\3\u015e\1\67\1\0\1\u015e"+
    "\1\0\4\u015e\1\0\1\u015e\4\0\1\u015e\1\0\1\u015e"+
    "\1\0\1\u015e\2\0\1\u015e\2\0\1\u015e\1\67\4\0"+
    "\1\u015e\11\0\4\u015e\16\0\1\u015e\11\0\1\u015f\1\0"+
    "\1\u015f\1\67\3\0\1\u015f\1\0\1\u015f\22\0\1\67"+
    "\16\0\4\u015f\30\0\1\u0160\1\0\1\u0160\6\0\1\u0160"+
    "\140\0\1\52\113\0\1\52\60\0\1\u0161\62\0\15\7"+
    "\1\0\1\7\4\0\1\110\27\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\1\7\1\263\26\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\14\7\1\u0162"+
    "\13\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\4\7\1\u0163\10\7\1\0\1\7\4\0\30\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\7\1\334\26\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\4\7\1\u0164\10\7\1\0"+
    "\1\7\4\0\30\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\u0165"+
    "\26\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\3\7\1\u0155\6\7\1\u0157"+
    "\15\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\11\7\1\u0166\16\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\24\7\1\221\3\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\24\7\1\u0167\3\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\11\7\1\u0168"+
    "\16\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\4\7\1\u0169\10\7\1\0\1\7\4\0\30\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\4\7\1\u016a\23\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\7\0\15\7\1\0\1\7\4\0"+
    "\6\7\1\u016b\21\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\7\0\15\7\1\0\1\7\4\0\1\7\1\u016c"+
    "\26\7\2\0\4\7\4\0\1\7\7\0\3\7\7\0"+
    "\15\7\1\0\1\7\4\0\22\7\1\u016d\5\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\u0106\27\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\35\0\1\u016e\1\0\1\u016f\2\0\1\u0170"+
    "\1\u0171\1\u0172\1\u0173\5\0\1\u0174\3\0\1\u0175\73\0"+
    "\1\u0176\111\0\1\u0177\110\0\1\u0177\46\0\3\u0178\1\67"+
    "\1\0\1\u0178\1\0\4\u0178\1\0\1\u0178\4\0\1\u0178"+
    "\1\0\1\u0178\1\0\1\u0178\2\0\1\u0178\2\0\1\u0178"+
    "\1\67\4\0\1\u0178\11\0\4\u0178\16\0\1\u0178\11\0"+
    "\1\u0179\1\0\1\u0179\1\67\3\0\1\u0179\1\0\1\u0179"+
    "\22\0\1\67\16\0\4\u0179\30\0\1\u017a\1\0\1\u017a"+
    "\6\0\1\u017a\126\0\1\u0124\53\0\15\7\1\0\1\7"+
    "\4\0\20\7\1\u017b\7\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\20\7"+
    "\1\u011d\7\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\3\7\1\u0155\24\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\4\7\1\u017c\23\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\23\7\1\u017d\4\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\1\7"+
    "\1\145\26\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\11\7\1\u011c\16\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\15\7\1\u017e\12\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\5\7\1\u017f\22\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\2\7"+
    "\1\u017e\25\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\1\224\27\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\36\0\1\u0180\14\0"+
    "\1\u0181\76\0\1\u0171\101\0\1\u0180\103\0\1\u0182\105\0"+
    "\1\u0183\13\0\1\u0184\76\0\1\u0146\7\0\1\u015c\73\0"+
    "\1\u0185\15\0\1\u015d\67\0\1\u0186\106\0\1\u0187\112\0"+
    "\1\u0188\61\0\3\u0189\1\67\1\0\1\u0189\1\0\4\u0189"+
    "\1\0\1\u0189\4\0\1\u0189\1\0\1\u0189\1\0\1\u0189"+
    "\2\0\1\u0189\2\0\1\u0189\1\67\4\0\1\u0189\11\0"+
    "\4\u0189\16\0\1\u0189\11\0\1\u018a\1\0\1\u018a\1\67"+
    "\3\0\1\u018a\1\0\1\u018a\22\0\1\67\16\0\4\u018a"+
    "\30\0\1\u018b\1\0\1\u018b\6\0\1\u018b\73\0\4\7"+
    "\1\u018c\10\7\1\0\1\7\4\0\30\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\7\0\15\7\1\0\1\7"+
    "\4\0\13\7\1\221\14\7\2\0\4\7\4\0\1\7"+
    "\7\0\3\7\7\0\15\7\1\0\1\7\4\0\4\7"+
    "\1\161\23\7\2\0\4\7\4\0\1\7\7\0\3\7"+
    "\7\0\15\7\1\0\1\7\4\0\13\7\1\u012f\14\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\11\7\1\u018d\16\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\40\0\1\52\107\0\1\52"+
    "\101\0\1\u018e\123\0\1\u018f\70\0\1\u0190\117\0\1\u0191"+
    "\147\0\1\u0192\52\0\1\u0193\74\0\1\u0194\60\0\3\u0195"+
    "\1\67\1\0\1\u0195\1\0\4\u0195\1\0\1\u0195\4\0"+
    "\1\u0195\1\0\1\u0195\1\0\1\u0195\2\0\1\u0195\2\0"+
    "\1\u0195\1\67\4\0\1\u0195\11\0\4\u0195\16\0\1\u0195"+
    "\11\0\1\u0196\1\0\1\u0196\1\67\3\0\1\u0196\1\0"+
    "\1\u0196\22\0\1\67\16\0\4\u0196\30\0\1\u0197\1\0"+
    "\1\u0197\6\0\1\u0197\73\0\15\7\1\0\1\7\4\0"+
    "\7\7\1\u0198\1\7\1\u011c\6\7\1\u0101\7\7\2\0"+
    "\4\7\4\0\1\7\7\0\3\7\7\0\15\7\1\0"+
    "\1\7\4\0\1\7\1\u0199\26\7\2\0\4\7\4\0"+
    "\1\7\7\0\3\7\36\0\1\u019a\113\0\1\u019b\103\0"+
    "\1\u019c\3\0\1\u019d\74\0\1\u0183\112\0\1\52\106\0"+
    "\1\u0128\114\0\1\u019e\53\0\3\u019f\1\67\1\0\1\u019f"+
    "\1\0\4\u019f\1\0\1\u019f\4\0\1\u019f\1\0\1\u019f"+
    "\1\0\1\u019f\2\0\1\u019f\2\0\1\u019f\1\67\4\0"+
    "\1\u019f\11\0\4\u019f\16\0\1\u019f\11\0\1\u01a0\1\0"+
    "\1\u01a0\1\67\3\0\1\u01a0\1\0\1\u01a0\22\0\1\67"+
    "\16\0\4\u01a0\30\0\1\u01a1\1\0\1\u01a1\6\0\1\u01a1"+
    "\73\0\15\7\1\0\1\7\4\0\14\7\1\u01a2\13\7"+
    "\2\0\4\7\4\0\1\7\7\0\3\7\7\0\15\7"+
    "\1\0\1\7\4\0\10\7\1\213\17\7\2\0\4\7"+
    "\4\0\1\7\7\0\3\7\50\0\1\52\76\0\1\u01a3"+
    "\100\0\1\u01a4\106\0\1\u0180\106\0\1\u01a5\65\0\3\u01a6"+
    "\1\67\1\0\1\u01a6\1\0\4\u01a6\1\0\1\u01a6\4\0"+
    "\1\u01a6\1\0\1\u01a6\1\0\1\u01a6\2\0\1\u01a6\2\0"+
    "\1\u01a6\1\67\4\0\1\u01a6\11\0\4\u01a6\16\0\1\u01a6"+
    "\11\0\1\u01a7\1\0\1\u01a7\1\67\3\0\1\u01a7\1\0"+
    "\1\u01a7\22\0\1\67\16\0\4\u01a7\30\0\1\u01a8\1\0"+
    "\1\u01a8\6\0\1\u01a8\73\0\15\7\1\0\1\7\4\0"+
    "\14\7\1\254\13\7\2\0\4\7\4\0\1\7\7\0"+
    "\3\7\32\0\1\u01a9\117\0\1\u01aa\100\0\1\u0192\62\0"+
    "\3\u01ab\1\67\1\0\1\u01ab\1\0\4\u01ab\1\0\1\u01ab"+
    "\4\0\1\u01ab\1\0\1\u01ab\1\0\1\u01ab\2\0\1\u01ab"+
    "\2\0\1\u01ab\1\67\4\0\1\u01ab\11\0\4\u01ab\16\0"+
    "\1\u01ab\11\0\1\u01ac\1\0\1\u01ac\1\67\3\0\1\u01ac"+
    "\1\0\1\u01ac\22\0\1\67\16\0\4\u01ac\30\0\1\u01ad"+
    "\1\0\1\u01ad\6\0\1\u01ad\131\0\1\u01ae\74\0\1\u01af"+
    "\64\0\3\u01b0\1\67\1\0\1\u01b0\1\0\4\u01b0\1\0"+
    "\1\u01b0\4\0\1\u01b0\1\0\1\u01b0\1\0\1\u01b0\2\0"+
    "\1\u01b0\2\0\1\u01b0\1\67\4\0\1\u01b0\11\0\4\u01b0"+
    "\16\0\1\u01b0\11\0\1\u01b1\1\0\1\u01b1\1\67\3\0"+
    "\1\u01b1\1\0\1\u01b1\22\0\1\67\16\0\4\u01b1\30\0"+
    "\1\u01b2\1\0\1\u01b2\6\0\1\u01b2\127\0\1\u01b3\100\0"+
    "\1\52\62\0\3\u01b4\1\67\1\0\1\u01b4\1\0\4\u01b4"+
    "\1\0\1\u01b4\4\0\1\u01b4\1\0\1\u01b4\1\0\1\u01b4"+
    "\2\0\1\u01b4\2\0\1\u01b4\1\67\4\0\1\u01b4\11\0"+
    "\4\u01b4\16\0\1\u01b4\11\0\1\u01b5\1\0\1\u01b5\1\67"+
    "\3\0\1\u01b5\1\0\1\u01b5\22\0\1\67\16\0\4\u01b5"+
    "\30\0\1\u01b6\1\0\1\u01b6\6\0\1\u01b6\141\0\1\u0192"+
    "\42\0\3\u01b7\1\67\1\0\1\u01b7\1\0\4\u01b7\1\0"+
    "\1\u01b7\4\0\1\u01b7\1\0\1\u01b7\1\0\1\u01b7\2\0"+
    "\1\u01b7\2\0\1\u01b7\1\67\4\0\1\u01b7\11\0\4\u01b7"+
    "\16\0\1\u01b7\11\0\1\u01b8\1\0\1\u01b8\1\67\3\0"+
    "\1\u01b8\1\0\1\u01b8\22\0\1\67\16\0\4\u01b8\30\0"+
    "\1\u01b9\1\0\1\u01b9\6\0\1\u01b9\75\0\3\u01ba\1\67"+
    "\1\0\1\u01ba\1\0\4\u01ba\1\0\1\u01ba\4\0\1\u01ba"+
    "\1\0\1\u01ba\1\0\1\u01ba\2\0\1\u01ba\2\0\1\u01ba"+
    "\1\67\4\0\1\u01ba\11\0\4\u01ba\16\0\1\u01ba\11\0"+
    "\1\u01bb\1\0\1\u01bb\1\67\3\0\1\u01bb\1\0\1\u01bb"+
    "\22\0\1\67\16\0\4\u01bb\30\0\1\u01bc\1\0\1\u01bc"+
    "\6\0\1\u01bc\100\0\1\67\30\0\1\67\52\0\1\u01bd"+
    "\1\0\1\u01bd\1\67\3\0\1\u01bd\1\0\1\u01bd\22\0"+
    "\1\67\16\0\4\u01bd\30\0\1\u01be\1\0\1\u01be\6\0"+
    "\1\u01be\75\0\1\u01bf\1\0\1\u01bf\1\67\3\0\1\u01bf"+
    "\1\0\1\u01bf\22\0\1\67\16\0\4\u01bf\30\0\1\u01c0"+
    "\1\0\1\u01c0\6\0\1\u01c0\75\0\1\u01c1\1\0\1\u01c1"+
    "\1\67\3\0\1\u01c1\1\0\1\u01c1\22\0\1\67\16\0"+
    "\4\u01c1\30\0\1\u01c2\1\0\1\u01c2\6\0\1\u01c2\75\0"+
    "\1\u01c3\1\0\1\u01c3\1\67\3\0\1\u01c3\1\0\1\u01c3"+
    "\22\0\1\67\16\0\4\u01c3\30\0\1\u01c4\1\0\1\u01c4"+
    "\6\0\1\u01c4\75\0\1\u01ba\1\0\1\u01ba\1\67\3\0"+
    "\1\u01ba\1\0\1\u01ba\22\0\1\67\16\0\4\u01ba\30\0"+
    "\1\u01c5\1\0\1\u01c5\6\0\1\u01c5\75\0\1\u01c6\1\0"+
    "\1\u01c6\6\0\1\u01c6\75\0\1\u01c7\1\0\1\u01c7\6\0"+
    "\1\u01c7\75\0\1\u01c8\1\0\1\u01c8\6\0\1\u01c8\75\0"+
    "\1\u01c9\1\0\1\u01c9\6\0\1\u01c9\75\0\1\u01ca\1\0"+
    "\1\u01ca\6\0\1\u01ca\75\0\1\u01cb\1\0\1\u01cb\6\0"+
    "\1\u01cb\75\0\1\u01cc\1\0\1\u01cc\6\0\1\u01cc\75\0"+
    "\1\u01cd\1\0\1\u01cd\6\0\1\u01cd\75\0\1\u01ce\1\0"+
    "\1\u01ce\6\0\1\u01ce\75\0\1\u01cf\1\0\1\u01cf\6\0"+
    "\1\u01cf\75\0\1\u01d0\1\0\1\u01d0\6\0\1\u01d0\75\0"+
    "\1\u01d1\1\0\1\u01d1\6\0\1\u01d1\75\0\1\u01d2\1\0"+
    "\1\u01d2\6\0\1\u01d2\75\0\1\u01d3\1\0\1\u01d3\6\0"+
    "\1\u01d3\75\0\1\u01d4\1\0\1\u01d4\6\0\1\u01d4\75\0"+
    "\1\u01d5\1\0\1\u01d5\6\0\1\u01d5\75\0\1\u01d6\1\0"+
    "\1\u01d6\6\0\1\u01d6\75\0\1\u01d7\1\0\1\u01d7\6\0"+
    "\1\u01d7\75\0\1\u01d8\1\0\1\u01d8\6\0\1\u01d8\75\0"+
    "\1\u01d9\1\0\1\u01d9\6\0\1\u01d9\75\0\1\u01da\1\0"+
    "\1\u01da\6\0\1\u01da\75\0\1\u01db\1\0\1\u01db\6\0"+
    "\1\u01db\75\0\1\u01dc\1\0\1\u01dc\6\0\1\u01dc\75\0"+
    "\1\u01dd\1\0\1\u01dd\6\0\1\u01dd\75\0\1\u01de\1\0"+
    "\1\u01de\6\0\1\u01de\75\0\1\u01df\1\0\1\u01df\6\0"+
    "\1\u01df\75\0\1\u01e0\1\0\1\u01e0\6\0\1\u01e0\75\0"+
    "\1\u01e1\1\0\1\u01e1\6\0\1\u01e1\75\0\1\67\1\0"+
    "\1\67\6\0\1\67\67\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[32873];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\11\1\2\11\23\1\1\11\6\1\1\11"+
    "\6\1\2\11\4\1\1\11\3\0\1\1\1\0\76\1"+
    "\1\11\2\1\2\11\7\1\1\0\77\1\1\11\70\1"+
    "\1\0\37\1\1\0\3\1\5\0\25\1\3\0\3\1"+
    "\3\0\23\1\4\0\3\1\1\0\14\1\12\0\10\1"+
    "\11\0\5\1\10\0\4\1\6\0\3\1\4\0\2\1"+
    "\3\0\2\1\3\0\2\1\2\0\2\1\1\0\2\1"+
    "\2\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\36\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[481];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public OCamlLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public OCamlLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public OCamlLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1802) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 7: 
          { return token(TokenType.DELIMETER);
          }
        case 15: break;
        case 11: 
          { return token(TokenType.KEYWORD);
          }
        case 16: break;
        case 6: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 17: break;
        case 4: 
          { return token(TokenType.OPERATOR);
          }
        case 18: break;
        case 14: 
          { tokenLength += 2;
          }
        case 19: break;
        case 2: 
          { return token(TokenType.IDENTIFIER);
          }
        case 20: break;
        case 10: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 21: break;
        case 5: 
          { yybegin(STRING); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 22: break;
        case 12: 
          { return token(TokenType.TYPE);
          }
        case 23: break;
        case 9: 
          { yybegin(YYINITIAL);
          }
        case 24: break;
        case 3: 
          { return token(TokenType.NUMBER);
          }
        case 25: break;
        case 13: 
          { return token(TokenType.SPECIAL_VALUE);
          }
        case 26: break;
        case 1: 
          { 
          }
        case 27: break;
        case 8: 
          { tokenLength += yylength();
          }
        case 28: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
